
  use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo.dta"
*describe ncognitivo nsocial nmotor nmed
destring ncognitivo nsocial nmotor nmed, replace

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo.dta", replace

********** CENTROOESTE
use "D:\Bases\MTE\Vinc\centrooeste2003_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo.dta"


keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\co03.dta", replace


************************************************** NORTE

use "D:\Bases\MTE\Vinc\norte2003_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo.dta"


keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\no03.dta", replace

************************************************* NORDESTE

use "D:\Bases\MTE\Vinc\nordeste2003_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo.dta"


keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ne03.dta", replace

********************************************* SUDESTE
use "D:\Bases\MTE\Vinc\sudeste2003_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo.dta"


keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\se03.dta", replace

********************************************* SUL
use "D:\Bases\MTE\Vinc\sul2003_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo.dta"


keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\su03.dta", replace


*******************************************************
  *******************************************************
  
  use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\co03.dta", clear 
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\no03.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ne03.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\se03.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\su03.dta"

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\media_municip_03.dta"

















*use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo.dta"
*describe ncognitivo nsocial nmotor nmed
*destring ncognitivo nsocial nmotor nmed, replace

********** CENTROOESTE
use "D:\Bases\MTE\Vinc\centrooeste2004_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo.dta"


keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\co04.dta", replace


************************************************** NORTE

use "D:\Bases\MTE\Vinc\norte2004_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo.dta"


keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\no04.dta", replace

************************************************* NORDESTE

use "D:\Bases\MTE\Vinc\nordeste2004_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo.dta"


keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ne04.dta", replace

********************************************* SUDESTE
use "D:\Bases\MTE\Vinc\sudeste2004_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo.dta"


keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\se04.dta", replace

********************************************* SUL
use "D:\Bases\MTE\Vinc\sul2004_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo.dta"


keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\su04.dta", replace


*******************************************************
  *******************************************************
  
  use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\co04.dta", clear 
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\no04.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ne04.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\se04.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\su04.dta"

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\media_municip_04.dta"



















*use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo.dta"
*describe ncognitivo nsocial nmotor nmed
**destring ncognitivo nsocial nmotor nmed, replace

********** CENTROOESTE
use "D:\Bases\MTE\Vinc\centrooeste2005_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo.dta"


keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\co05.dta", replace


************************************************** NORTE

use "D:\Bases\MTE\Vinc\norte2005_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo.dta"


keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\no05.dta", replace

************************************************* NORDESTE

use "D:\Bases\MTE\Vinc\nordeste2005_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo.dta"


keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ne05.dta", replace

********************************************* SUDESTE
use "D:\Bases\MTE\Vinc\sudeste2005_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo.dta"


keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\se05.dta", replace

********************************************* SUL
use "D:\Bases\MTE\Vinc\sul2005_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo.dta"


keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\su05.dta", replace


*******************************************************
  *******************************************************
  
  use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\co05.dta", clear 
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\no05.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ne05.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\se05.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\su05.dta"

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\media_municip_05.dta"






















*use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo.dta"
*describe ncognitivo nsocial nmotor nmed
**destring ncognitivo nsocial nmotor nmed, replace

********** CENTROOESTE
use "D:\Bases\MTE\Vinc\centrooeste2006_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo.dta"


keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\co06.dta", replace


************************************************** NORTE

use "D:\Bases\MTE\Vinc\norte2006_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo.dta"


keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\no06.dta", replace

************************************************* NORDESTE

use "D:\Bases\MTE\Vinc\nordeste2006_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo.dta"


keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ne06.dta", replace

********************************************* SUDESTE
use "D:\Bases\MTE\Vinc\sudeste2006_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo.dta"


keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\se06.dta", replace

********************************************* SUL
use "D:\Bases\MTE\Vinc\sul2006_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo.dta"


keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\su06.dta", replace


*******************************************************
  *******************************************************
  
  use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\co06.dta", clear 
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\no06.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ne06.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\se06.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\su06.dta"

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\media_municip_06.dta"










*use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo.dta"
*describe ncognitivo nsocial nmotor nmed
*destring ncognitivo nsocial nmotor nmed, replace

********** CENTROOESTE
use "D:\Bases\MTE\Vinc\centrooeste2007_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo.dta"


keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\co07.dta", replace


************************************************** NORTE

use "D:\Bases\MTE\Vinc\norte2007_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo.dta"


keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\no07.dta", replace

************************************************* NORDESTE

use "D:\Bases\MTE\Vinc\nordeste2007_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo.dta"


keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ne07.dta", replace

********************************************* SUDESTE
use "D:\Bases\MTE\Vinc\sudeste2007_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo.dta"


keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\se07.dta", replace

********************************************* SUL
use "D:\Bases\MTE\Vinc\sul2007_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo.dta"


keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\su07.dta", replace


*******************************************************
  *******************************************************
  
  use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\co07.dta", clear 
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\no07.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ne07.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\se07.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\su07.dta"

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\media_municip_07.dta"





*use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo.dta"
*describe ncognitivo nsocial nmotor nmed
*destring ncognitivo nsocial nmotor nmed, replace

********** CENTROOESTE
use "D:\Bases\MTE\Vinc\centrooeste2008_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo.dta"


keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\co08.dta", replace


************************************************** NORTE

use "D:\Bases\MTE\Vinc\norte2008_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo.dta"


keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\no08.dta", replace

************************************************* NORDESTE

use "D:\Bases\MTE\Vinc\nordeste2008_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo.dta"


keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ne08.dta", replace

********************************************* SUDESTE
use "D:\Bases\MTE\Vinc\sudeste2008_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo.dta"


keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\se08.dta", replace

********************************************* SUL
use "D:\Bases\MTE\Vinc\sul2008_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo.dta"


keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\su08.dta", replace


*******************************************************
  *******************************************************
  
  use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\co08.dta", clear 
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\no08.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ne08.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\se08.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\su08.dta"

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\media_municip_08.dta"










*use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo.dta"
*describe ncognitivo nsocial nmotor nmed
*destring ncognitivo nsocial nmotor nmed, replace

********** CENTROOESTE
use "D:\Bases\MTE\Vinc\centrooeste2009_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo.dta"


keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\co09.dta", replace


************************************************** NORTE

use "D:\Bases\MTE\Vinc\norte2009_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo.dta"


keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\no09.dta", replace

************************************************* NORDESTE

use "D:\Bases\MTE\Vinc\nordeste2009_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo.dta"


keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ne09.dta", replace

********************************************* SUDESTE
use "D:\Bases\MTE\Vinc\sudeste2009_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo.dta"


keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\se09.dta", replace

********************************************* SUL
use "D:\Bases\MTE\Vinc\sul2009_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo.dta"


keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\su09.dta", replace


*******************************************************
  *******************************************************
  
  use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\co09.dta", clear 
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\no09.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ne09.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\se09.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\su09.dta"

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\media_municip_09.dta"














*use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo.dta"
*describe ncognitivo nsocial nmotor nmed
*destring ncognitivo nsocial nmotor nmed, replace

********** CENTROOESTE
use "D:\Bases\MTE\Vinc\centrooeste2010_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo.dta"


keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\co10.dta", replace


************************************************** NORTE

use "D:\Bases\MTE\Vinc\norte2010_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo.dta"


keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\no10.dta", replace

************************************************* NORDESTE

use "D:\Bases\MTE\Vinc\nordeste2010_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo.dta"


keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ne10.dta", replace

********************************************* SUDESTE
use "D:\Bases\MTE\Vinc\sudeste2010_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo.dta"


keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\se10.dta", replace

********************************************* SUL
use "D:\Bases\MTE\Vinc\sul2010_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo.dta"


keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\su10.dta", replace


*******************************************************
  *******************************************************
  
  use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\co10.dta", clear 
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\no10.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ne10.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\se10.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\su10.dta"

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\media_municip_10.dta"


























*use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"
*describe ncognitivo nsocial nmotor nmed
*destring ncognitivo nsocial nmotor nmed, replace

********** CENTROOESTE
use "D:\Bases\MTE\Vinc\centrooeste2011_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"


keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\co11.dta", replace


************************************************** NORTE

use "D:\Bases\MTE\Vinc\norte2011_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"


keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\no11.dta", replace

************************************************* NORDESTE

use "D:\Bases\MTE\Vinc\nordeste2011_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"


keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ne11.dta", replace

********************************************* SUDESTE
use "D:\Bases\MTE\Vinc\sudeste2011_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"


keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\se11.dta", replace

********************************************* SUL
use "D:\Bases\MTE\Vinc\sul2011_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"


keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\su11.dta", replace


*******************************************************
  *******************************************************
  
  use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\co11.dta", clear 
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\no11.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ne11.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\se11.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\su11.dta"

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\media_municip_11.dta"













use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"
*describe ncognitivo nsocial nmotor nmed
destring ncognitivo nsocial nmotor nmed, replace

********** CENTROOESTE
use "D:\Bases\MTE\Vinc\centrooeste2012_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"

keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\co12.dta", replace

************************************************** NORTE

use "D:\Bases\MTE\Vinc\norte2012_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"

keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\no12.dta", replace

************************************************* NORDESTE

use "D:\Bases\MTE\Vinc\nordeste2012_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"

keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ne12.dta", replace

********************************************* SUDESTE
use "D:\Bases\MTE\Vinc\sudeste2012_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"

keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\se12.dta", replace

********************************************* SUL
use "D:\Bases\MTE\Vinc\sul2012_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"

keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\su12.dta", replace

*******************************************************
  *******************************************************
  
  use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\co12.dta", clear 
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\no12.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ne12.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\se12.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\su12.dta"

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\media_municip_12.dta"














*use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"
*describe ncognitivo nsocial nmotor nmed
*destring ncognitivo nsocial nmotor nmed, replace

********** CENTROOESTE
use "D:\Bases\MTE\Vinc\centrooeste2013_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"

keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\co13.dta", replace

************************************************** NORTE

use "D:\Bases\MTE\Vinc\norte2013_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"

keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\no13.dta", replace

************************************************* NORDESTE

use "D:\Bases\MTE\Vinc\nordeste2013_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"

keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ne13.dta", replace

********************************************* SUDESTE
use "D:\Bases\MTE\Vinc\sudeste2013_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"

keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\se13.dta", replace

********************************************* SUL
use "D:\Bases\MTE\Vinc\sul2013_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"

keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\su13.dta", replace

*******************************************************
  *******************************************************
  
  use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\co13.dta", clear 
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\no13.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ne13.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\se13.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\su13.dta"

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\media_municip_13.dta"












*use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"
*describe ncognitivo nsocial nmotor nmed
*destring ncognitivo nsocial nmotor nmed, replace

********** CENTROOESTE
use "D:\Bases\MTE\Vinc\centrooeste2014_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"

keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\co14.dta", replace

************************************************** NORTE

use "D:\Bases\MTE\Vinc\norte2014_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"

keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\no14.dta", replace

************************************************* NORDESTE

use "D:\Bases\MTE\Vinc\nordeste2014_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"

keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ne14.dta", replace

********************************************* SUDESTE
use "D:\Bases\MTE\Vinc\sudeste2014_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"

keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\se14.dta", replace

********************************************* SUL
use "D:\Bases\MTE\Vinc\sul2014_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"

keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\su14.dta", replace

*******************************************************
  *******************************************************
  
  use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\co14.dta", clear 
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\no14.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ne14.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\se14.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\su14.dta"

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\media_municip_14.dta"









*use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"
*describe ncognitivo nsocial nmotor nmed
*destring ncognitivo nsocial nmotor nmed, replace

********** CENTROOESTE
use "D:\Bases\MTE\Vinc\centrooeste2015_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"

keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\co15.dta", replace

************************************************** NORTE

use "D:\Bases\MTE\Vinc\norte2015_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"

keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\no15.dta", replace

************************************************* NORDESTE

use "D:\Bases\MTE\Vinc\nordeste2015_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"

keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ne15.dta", replace

********************************************* SUDESTE
use "D:\Bases\MTE\Vinc\sudeste2015_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"

keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\se15.dta", replace

********************************************* SUL
use "D:\Bases\MTE\Vinc\sul2015_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"

keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\su15.dta", replace

*******************************************************
  *******************************************************
  
  use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\co15.dta", clear 
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\no15.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ne15.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\se15.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\su15.dta"

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\media_municip_15.dta"













*use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"
*describe ncognitivo nsocial nmotor nmed
*destring ncognitivo nsocial nmotor nmed, replace

********** CENTROOESTE
use "D:\Bases\MTE\Vinc\centrooeste2016_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"

keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\co16.dta", replace

************************************************** NORTE

use "D:\Bases\MTE\Vinc\norte2016_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"

keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\no16.dta", replace

************************************************* NORDESTE

use "D:\Bases\MTE\Vinc\nordeste2016_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"

keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ne16.dta", replace

********************************************* SUDESTE
use "D:\Bases\MTE\Vinc\sudeste2016_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"

keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\se16.dta", replace

********************************************* SUL
use "D:\Bases\MTE\Vinc\sul2016_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"

keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\su16.dta", replace

*******************************************************
  *******************************************************
  
  use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\co16.dta", clear 
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\no16.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ne16.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\se16.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\su16.dta"

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\media_municip_16.dta"








*use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"
*describe ncognitivo nsocial nmotor nmed
*destring ncognitivo nsocial nmotor nmed, replace

********** CENTROOESTE
use "D:\Bases\MTE\Vinc\centrooeste2017_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"

keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\co17.dta", replace

************************************************** NORTE

use "D:\Bases\MTE\Vinc\norte2017_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"

keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\no17.dta", replace

************************************************* NORDESTE

use "D:\Bases\MTE\Vinc\nordeste2017_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"

keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ne17.dta", replace

********************************************* SUDESTE
use "D:\Bases\MTE\Vinc\sudeste2017_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"

keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\se17.dta", replace

********************************************* SUL
use "D:\Bases\MTE\Vinc\sul2017_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"

keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\su17.dta", replace

*******************************************************
  *******************************************************
  
  use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\co17.dta", clear 
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\no17.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ne17.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\se17.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\su17.dta"

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\media_municip_17.dta"















*use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"
*describe ncognitivo nsocial nmotor nmed
*destring ncognitivo nsocial nmotor nmed, replace

********** CENTROOESTE
use "D:\Bases\MTE\Vinc\centrooeste2018_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"

keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\co18.dta", replace

************************************************** NORTE

use "D:\Bases\MTE\Vinc\norte2018_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"

keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\no18.dta", replace

************************************************* NORDESTE

use "D:\Bases\MTE\Vinc\nordeste2018_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"

keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ne18.dta", replace

********************************************* SUDESTE
use "D:\Bases\MTE\Vinc\sudeste2018_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"

keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\se18.dta", replace

********************************************* SUL
use "D:\Bases\MTE\Vinc\sul2018_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"

keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\su18.dta", replace

*******************************************************
  *******************************************************
  
  use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\co18.dta", clear 
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\no18.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ne18.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\se18.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\su18.dta"

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\media_municip_18.dta"








*use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"
*describe ncognitivo nsocial nmotor nmed
*destring ncognitivo nsocial nmotor nmed, replace

********** CENTROOESTE
use "D:\Bases\MTE\Vinc\centrooeste2019_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"

keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\co19.dta", replace

************************************************** NORTE

use "D:\Bases\MTE\Vinc\norte2019_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"

keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\no19.dta", replace

************************************************* NORDESTE

use "D:\Bases\MTE\Vinc\nordeste2019_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"

keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ne19.dta", replace

********************************************* SUDESTE
*use "D:\Bases\MTE\Vinc\sudeste2019_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

*merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"

*keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  *| substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  *| substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


*drop if missing(ncognitivo)

*egen media_ncognitivo = mean(ncognitivo), by(municipio)
*egen media_nsocial2 = mean(nsocial), by(municipio)
*egen media_nmotor = mean(nmotor), by(municipio)
*egen media_nmed = mean(nmed), by(municipio)

*bysort municipio: egen first_obs = min(_n)
*keep if _n == first_obs
*drop first_obs

*keep municipio ncognitivo nsocial nmotor nmed

*save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\se19.dta", replace

********************************************* SUL
use "D:\Bases\MTE\Vinc\sul2019_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"

keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\su19.dta", replace

*******************************************************
  *******************************************************
  
  *use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\co19.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020
*append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\no19.dta"
*append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ne19.dta"
*append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\se19.dta"
*append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\su19.dta"

*save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\media_municip_19.dta"














*use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"
*describe ncognitivo nsocial nmotor nmed
*destring ncognitivo nsocial nmotor nmed, replace

********** CENTROOESTE
use "D:\Bases\MTE\Vinc\centrooeste2020_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"

keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\co20.dta", replace

************************************************** NORTE

use "D:\Bases\MTE\Vinc\norte2020_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"

keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\no20.dta", replace

************************************************* NORDESTE

use "D:\Bases\MTE\Vinc\nordeste2020_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"

keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ne20.dta", replace

********************************************* SUDESTE
*use "D:\Bases\MTE\Vinc\sudeste2020_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

*merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"

*keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  *| substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  *| substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


*drop if missing(ncognitivo)

*egen media_ncognitivo = mean(ncognitivo), by(municipio)
*egen media_nsocial2 = mean(nsocial), by(municipio)
*egen media_nmotor = mean(nmotor), by(municipio)
*egen media_nmed = mean(nmed), by(municipio)

*bysort municipio: egen first_obs = min(_n)
*keep if _n == first_obs
*drop first_obs

*keep municipio ncognitivo nsocial nmotor nmed

*save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\se20.dta", replace

********************************************* SUL
use "D:\Bases\MTE\Vinc\sul2020_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"

keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\su20.dta", replace

*******************************************************
  *******************************************************
  
  *use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\co20.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020
*append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\no20.dta"
*append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ne20.dta"
*append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\se20.dta"
*append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\su20.dta"

*save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\media_municip_20.dta"










*use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"
*describe ncognitivo nsocial nmotor nmed
*destring ncognitivo nsocial nmotor nmed, replace

********** CENTROOESTE
use "D:\Bases\MTE\Vinc\centrooeste2021_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"

keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\co21.dta", replace

************************************************** NORTE

use "D:\Bases\MTE\Vinc\norte2021_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"

keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\no21.dta", replace

************************************************* NORDESTE

use "D:\Bases\MTE\Vinc\nordeste2021_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"

keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ne21.dta", replace

********************************************* SUDESTE
*use "D:\Bases\MTE\Vinc\sudeste2021_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

*merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"

*keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  * | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  *  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


*drop if missing(ncognitivo)

*egen media_ncognitivo = mean(ncognitivo), by(municipio)
*egen media_nsocial2 = mean(nsocial), by(municipio)
*egen media_nmotor = mean(nmotor), by(municipio)
*egen media_nmed = mean(nmed), by(municipio)

*bysort municipio: egen first_obs = min(_n)
*keep if _n == first_obs
*drop first_obs

*keep municipio ncognitivo nsocial nmotor nmed

*save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\se21.dta", replace

********************************************* SUL
use "D:\Bases\MTE\Vinc\sul2021_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"

keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\su21.dta", replace

*******************************************************
  *******************************************************
  
  *use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\co21.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020
*append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\no21.dta"
*append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ne21.dta"
*append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\se21.dta"
*append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\su21.dta"

*save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\media_municip_21.dta"
























**************************************** SUDESTE 19-21
****** mgesrj

use "D:\Bases\MTE\Vinc\mgesrj2019_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"

keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\mgesrj19.dta", replace

***********
  
  use "D:\Bases\MTE\Vinc\mgesrj2020_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"

keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\mgesrj20.dta", replace

***************
  
  use "D:\Bases\MTE\Vinc\mgesrj2021_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"

keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\mgesrj21.dta", replace











*********************** sp

use "D:\Bases\MTE\Vinc\sp2019_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"

keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\sp19.dta", replace


**********
  
  use "D:\Bases\MTE\Vinc\sp2020_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"

keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\sp20.dta", replace

***************
  
  use "D:\Bases\MTE\Vinc\sp2021_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\skills_cbo - Copia.dta"

keep if substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74" ///
  | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if _n == first_obs
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\sp21.dta", replace












**********************************************************
  
  
  use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\co19.dta", clear 
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\no19.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ne19.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\mgesrj19.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\sp19.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\su19.dta"

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\media_municip_19.dta"

*******************
  
  use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\co20.dta", clear 
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\no20.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ne20.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\mgesrj20.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\sp20.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\su20.dta"

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\media_municip_20.dta"



****************************
  
  use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\co21.dta", clear 
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\no21.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ne21.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\mgesrj21.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\sp21.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\su21.dta"

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\media_municip_21.dta"































































use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo.dta"
*describe ncognitivo nsocial nmotor nmed
destring ncognitivo nsocial nmotor nmed, replace

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo.dta", replace

********** CENTROOESTE
use "D:\Bases\MTE\Vinc\centrooeste2003_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo.dta"







drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\co03.dta", replace


************************************************** NORTE

use "D:\Bases\MTE\Vinc\norte2003_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo.dta"







drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\no03.dta", replace

************************************************* NORDESTE

use "D:\Bases\MTE\Vinc\nordeste2003_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo.dta"







drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\ne03.dta", replace

********************************************* SUDESTE
use "D:\Bases\MTE\Vinc\sudeste2003_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo.dta"







drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\se03.dta", replace

********************************************* SUL
use "D:\Bases\MTE\Vinc\sul2003_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo.dta"







drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\su03.dta", replace


*******************************************************
  *******************************************************
  
  use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\co03.dta", clear 
keep empem3112 == 1
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\no03.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\ne03.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\se03.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\su03.dta"

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\media_municip_03.dta"

















*use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo.dta"
*describe ncognitivo nsocial nmotor nmed
*destring ncognitivo nsocial nmotor nmed, replace

********** CENTROOESTE
use "D:\Bases\MTE\Vinc\centrooeste2004_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo.dta"







drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\co04.dta", replace


************************************************** NORTE

use "D:\Bases\MTE\Vinc\norte2004_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo.dta"







drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\no04.dta", replace

************************************************* NORDESTE

use "D:\Bases\MTE\Vinc\nordeste2004_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo.dta"







drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\ne04.dta", replace

********************************************* SUDESTE
use "D:\Bases\MTE\Vinc\sudeste2004_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo.dta"







drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\se04.dta", replace

********************************************* SUL
use "D:\Bases\MTE\Vinc\sul2004_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo.dta"







drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\su04.dta", replace


*******************************************************
  *******************************************************
  
  use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\co04.dta", clear 
keep empem3112 == 1
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\no04.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\ne04.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\se04.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\su04.dta"

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\media_municip_04.dta"



















*use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo.dta"
*describe ncognitivo nsocial nmotor nmed
**destring ncognitivo nsocial nmotor nmed, replace

********** CENTROOESTE
use "D:\Bases\MTE\Vinc\centrooeste2005_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo.dta"







drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\co05.dta", replace


************************************************** NORTE

use "D:\Bases\MTE\Vinc\norte2005_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo.dta"







drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\no05.dta", replace

************************************************* NORDESTE

use "D:\Bases\MTE\Vinc\nordeste2005_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo.dta"







drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\ne05.dta", replace

********************************************* SUDESTE
use "D:\Bases\MTE\Vinc\sudeste2005_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo.dta"







drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\se05.dta", replace

********************************************* SUL
use "D:\Bases\MTE\Vinc\sul2005_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo.dta"







drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\su05.dta", replace


*******************************************************
  *******************************************************
  
  use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\co05.dta", clear 
keep empem3112 == 1
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\no05.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\ne05.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\se05.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\su05.dta"

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\media_municip_05.dta"






















*use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo.dta"
*describe ncognitivo nsocial nmotor nmed
**destring ncognitivo nsocial nmotor nmed, replace

********** CENTROOESTE
use "D:\Bases\MTE\Vinc\centrooeste2006_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo.dta"







drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\co06.dta", replace


************************************************** NORTE

use "D:\Bases\MTE\Vinc\norte2006_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo.dta"







drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\no06.dta", replace

************************************************* NORDESTE

use "D:\Bases\MTE\Vinc\nordeste2006_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo.dta"







drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\ne06.dta", replace

********************************************* SUDESTE
use "D:\Bases\MTE\Vinc\sudeste2006_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo.dta"







drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\se06.dta", replace

********************************************* SUL
use "D:\Bases\MTE\Vinc\sul2006_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo.dta"







drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\su06.dta", replace


*******************************************************
  *******************************************************
  
  use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\co06.dta", clear 
keep empem3112 == 1
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\no06.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\ne06.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\se06.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\su06.dta"

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\media_municip_06.dta"










*use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo.dta"
*describe ncognitivo nsocial nmotor nmed
*destring ncognitivo nsocial nmotor nmed, replace

********** CENTROOESTE
use "D:\Bases\MTE\Vinc\centrooeste2007_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo.dta"







drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\co07.dta", replace


************************************************** NORTE

use "D:\Bases\MTE\Vinc\norte2007_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo.dta"







drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\no07.dta", replace

************************************************* NORDESTE

use "D:\Bases\MTE\Vinc\nordeste2007_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo.dta"







drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\ne07.dta", replace

********************************************* SUDESTE
use "D:\Bases\MTE\Vinc\sudeste2007_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo.dta"







drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\se07.dta", replace

********************************************* SUL
use "D:\Bases\MTE\Vinc\sul2007_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo.dta"







drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\su07.dta", replace


*******************************************************
  *******************************************************
  
  use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\co07.dta", clear 
keep empem3112 == 1
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\no07.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\ne07.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\se07.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\su07.dta"

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\media_municip_07.dta"





*use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo.dta"
*describe ncognitivo nsocial nmotor nmed
*destring ncognitivo nsocial nmotor nmed, replace

********** CENTROOESTE
use "D:\Bases\MTE\Vinc\centrooeste2008_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo.dta"







drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\co08.dta", replace


************************************************** NORTE

use "D:\Bases\MTE\Vinc\norte2008_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo.dta"







drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\no08.dta", replace

************************************************* NORDESTE

use "D:\Bases\MTE\Vinc\nordeste2008_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo.dta"







drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\ne08.dta", replace

********************************************* SUDESTE
use "D:\Bases\MTE\Vinc\sudeste2008_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo.dta"







drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\se08.dta", replace

********************************************* SUL
use "D:\Bases\MTE\Vinc\sul2008_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo.dta"







drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\su08.dta", replace


*******************************************************
  *******************************************************
  
  use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\co08.dta", clear 
keep empem3112 == 1
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\no08.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\ne08.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\se08.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\su08.dta"

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\media_municip_08.dta"










*use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo.dta"
*describe ncognitivo nsocial nmotor nmed
*destring ncognitivo nsocial nmotor nmed, replace

********** CENTROOESTE
use "D:\Bases\MTE\Vinc\centrooeste2009_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo.dta"







drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\co09.dta", replace


************************************************** NORTE

use "D:\Bases\MTE\Vinc\norte2009_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo.dta"







drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\no09.dta", replace

************************************************* NORDESTE

use "D:\Bases\MTE\Vinc\nordeste2009_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo.dta"







drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\ne09.dta", replace

********************************************* SUDESTE
use "D:\Bases\MTE\Vinc\sudeste2009_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo.dta"







drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\se09.dta", replace

********************************************* SUL
use "D:\Bases\MTE\Vinc\sul2009_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo.dta"







drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\su09.dta", replace


*******************************************************
  *******************************************************
  
  use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\co09.dta", clear 
keep empem3112 == 1
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\no09.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\ne09.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\se09.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\su09.dta"

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\media_municip_09.dta"














*use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo.dta"
*describe ncognitivo nsocial nmotor nmed
*destring ncognitivo nsocial nmotor nmed, replace

********** CENTROOESTE
use "D:\Bases\MTE\Vinc\centrooeste2010_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo.dta"







drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\co10.dta", replace


************************************************** NORTE

use "D:\Bases\MTE\Vinc\norte2010_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo.dta"







drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\no10.dta", replace

************************************************* NORDESTE

use "D:\Bases\MTE\Vinc\nordeste2010_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo.dta"







drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\ne10.dta", replace

********************************************* SUDESTE
use "D:\Bases\MTE\Vinc\sudeste2010_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo.dta"







drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\se10.dta", replace

********************************************* SUL
use "D:\Bases\MTE\Vinc\sul2010_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo.dta"







drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\su10.dta", replace


*******************************************************
  *******************************************************
  
  use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\co10.dta", clear 
keep empem3112 == 1
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\no10.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\ne10.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\se10.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\su10.dta"

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\media_municip_10.dta"


























*use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"
*describe ncognitivo nsocial nmotor nmed
*destring ncognitivo nsocial nmotor nmed, replace

********** CENTROOESTE
use "D:\Bases\MTE\Vinc\centrooeste2011_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"







drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\co11.dta", replace


************************************************** NORTE

use "D:\Bases\MTE\Vinc\norte2011_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"







drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\no11.dta", replace

************************************************* NORDESTE

use "D:\Bases\MTE\Vinc\nordeste2011_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"







drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\ne11.dta", replace

********************************************* SUDESTE
use "D:\Bases\MTE\Vinc\sudeste2011_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"







drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\se11.dta", replace

********************************************* SUL
use "D:\Bases\MTE\Vinc\sul2011_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"







drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\su11.dta", replace


*******************************************************
  *******************************************************
  
  use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\co11.dta", clear 
keep empem3112 == 1
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\no11.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\ne11.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\se11.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\su11.dta"

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\media_municip_11.dta"













*use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"
*describe ncognitivo nsocial nmotor nmed
*destring ncognitivo nsocial nmotor nmed, replace

********** CENTROOESTE
use "D:\Bases\MTE\Vinc\centrooeste2012_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"






drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\co12.dta", replace

************************************************** NORTE

use "D:\Bases\MTE\Vinc\norte2012_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"






drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\no12.dta", replace

************************************************* NORDESTE

use "D:\Bases\MTE\Vinc\nordeste2012_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"






drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\ne12.dta", replace

********************************************* SUDESTE
use "D:\Bases\MTE\Vinc\sudeste2012_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"






drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\se12.dta", replace

********************************************* SUL
use "D:\Bases\MTE\Vinc\sul2012_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"






drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\su12.dta", replace

*******************************************************
  *******************************************************
  
  use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\co12.dta", clear 
keep empem3112 == 1
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\no12.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\ne12.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\se12.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\su12.dta"

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\media_municip_12.dta"














*use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"
*describe ncognitivo nsocial nmotor nmed
*destring ncognitivo nsocial nmotor nmed, replace

********** CENTROOESTE
use "D:\Bases\MTE\Vinc\centrooeste2013_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"






drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\co13.dta", replace

************************************************** NORTE

use "D:\Bases\MTE\Vinc\norte2013_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"






drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\no13.dta", replace

************************************************* NORDESTE

use "D:\Bases\MTE\Vinc\nordeste2013_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"






drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\ne13.dta", replace

********************************************* SUDESTE
use "D:\Bases\MTE\Vinc\sudeste2013_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"






drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\se13.dta", replace

********************************************* SUL
use "D:\Bases\MTE\Vinc\sul2013_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"






drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\su13.dta", replace

*******************************************************
  *******************************************************
  
  use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\co13.dta", clear 
keep empem3112 == 1
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\no13.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\ne13.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\se13.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\su13.dta"

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\media_municip_13.dta"












*use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"
*describe ncognitivo nsocial nmotor nmed
*destring ncognitivo nsocial nmotor nmed, replace

********** CENTROOESTE
use "D:\Bases\MTE\Vinc\centrooeste2014_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"






drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\co14.dta", replace

************************************************** NORTE

use "D:\Bases\MTE\Vinc\norte2014_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"






drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\no14.dta", replace

************************************************* NORDESTE

use "D:\Bases\MTE\Vinc\nordeste2014_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"






drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\ne14.dta", replace

********************************************* SUDESTE
use "D:\Bases\MTE\Vinc\sudeste2014_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"






drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\se14.dta", replace

********************************************* SUL
use "D:\Bases\MTE\Vinc\sul2014_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"






drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\su14.dta", replace

*******************************************************
  *******************************************************
  
  use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\co14.dta", clear 
keep empem3112 == 1
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\no14.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\ne14.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\se14.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\su14.dta"

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\media_municip_14.dta"









*use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"
*describe ncognitivo nsocial nmotor nmed
*destring ncognitivo nsocial nmotor nmed, replace

********** CENTROOESTE
use "D:\Bases\MTE\Vinc\centrooeste2015_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"






drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\co15.dta", replace

************************************************** NORTE

use "D:\Bases\MTE\Vinc\norte2015_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"






drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\no15.dta", replace

************************************************* NORDESTE

use "D:\Bases\MTE\Vinc\nordeste2015_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"






drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\ne15.dta", replace

********************************************* SUDESTE
use "D:\Bases\MTE\Vinc\sudeste2015_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"






drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\se15.dta", replace

********************************************* SUL
use "D:\Bases\MTE\Vinc\sul2015_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"






drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\su15.dta", replace

*******************************************************
  *******************************************************
  
  use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\co15.dta", clear 
keep empem3112 == 1
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\no15.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\ne15.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\se15.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\su15.dta"

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\media_municip_15.dta"













*use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"
*describe ncognitivo nsocial nmotor nmed
*destring ncognitivo nsocial nmotor nmed, replace

********** CENTROOESTE
use "D:\Bases\MTE\Vinc\centrooeste2016_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"






drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\co16.dta", replace

************************************************** NORTE

use "D:\Bases\MTE\Vinc\norte2016_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"






drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\no16.dta", replace

************************************************* NORDESTE

use "D:\Bases\MTE\Vinc\nordeste2016_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"






drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\ne16.dta", replace

********************************************* SUDESTE
use "D:\Bases\MTE\Vinc\sudeste2016_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"






drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\se16.dta", replace

********************************************* SUL
use "D:\Bases\MTE\Vinc\sul2016_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"






drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\su16.dta", replace

*******************************************************
  *******************************************************
  
  use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\co16.dta", clear 
keep empem3112 == 1
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\no16.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\ne16.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\se16.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\su16.dta"

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\media_municip_16.dta"








*use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"
*describe ncognitivo nsocial nmotor nmed
*destring ncognitivo nsocial nmotor nmed, replace

********** CENTROOESTE
use "D:\Bases\MTE\Vinc\centrooeste2017_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"






drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\co17.dta", replace

************************************************** NORTE

use "D:\Bases\MTE\Vinc\norte2017_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"






drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\no17.dta", replace

************************************************* NORDESTE

use "D:\Bases\MTE\Vinc\nordeste2017_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"






drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\ne17.dta", replace

********************************************* SUDESTE
use "D:\Bases\MTE\Vinc\sudeste2017_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"






drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\se17.dta", replace

********************************************* SUL
use "D:\Bases\MTE\Vinc\sul2017_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"






drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\su17.dta", replace

*******************************************************
  *******************************************************
  
  use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\co17.dta", clear 
keep empem3112 == 1
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\no17.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\ne17.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\se17.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\su17.dta"

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\media_municip_17.dta"















*use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"
*describe ncognitivo nsocial nmotor nmed
*destring ncognitivo nsocial nmotor nmed, replace

********** CENTROOESTE
use "D:\Bases\MTE\Vinc\centrooeste2018_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"






drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\co18.dta", replace

************************************************** NORTE

use "D:\Bases\MTE\Vinc\norte2018_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"






drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\no18.dta", replace

************************************************* NORDESTE

use "D:\Bases\MTE\Vinc\nordeste2018_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"






drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\ne18.dta", replace

********************************************* SUDESTE
use "D:\Bases\MTE\Vinc\sudeste2018_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"






drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\se18.dta", replace

********************************************* SUL
use "D:\Bases\MTE\Vinc\sul2018_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"






drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\su18.dta", replace

*******************************************************
  *******************************************************
  
  use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\co18.dta", clear 
keep empem3112 == 1
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\no18.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\ne18.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\se18.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\su18.dta"

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\media_municip_18.dta"








*use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"
*describe ncognitivo nsocial nmotor nmed
*destring ncognitivo nsocial nmotor nmed, replace

********** CENTROOESTE
use "D:\Bases\MTE\Vinc\centrooeste2019_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"






drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\co19.dta", replace

************************************************** NORTE

use "D:\Bases\MTE\Vinc\norte2019_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"






drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\no19.dta", replace

************************************************* NORDESTE

use "D:\Bases\MTE\Vinc\nordeste2019_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"






drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\ne19.dta", replace

********************************************* SUDESTE
*use "D:\Bases\MTE\Vinc\sudeste2019_limpo.dta", clear 
keep empem3112 == 1

*merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"

*
  *| substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  *| substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


*drop if missing(ncognitivo)

*egen media_ncognitivo = mean(ncognitivo), by(municipio)
*egen media_nsocial2 = mean(nsocial), by(municipio)
*egen media_nmotor = mean(nmotor), by(municipio)
*egen media_nmed = mean(nmed), by(municipio)

*bysort municipio: egen first_obs = min(_n)
*keep if empem3112 == "1"
*drop first_obs

*keep municipio ncognitivo nsocial nmotor nmed

*save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\se19.dta", replace

********************************************* SUL
use "D:\Bases\MTE\Vinc\sul2019_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"






drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\su19.dta", replace

*******************************************************
  *******************************************************
  
  *use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\co19.dta", clear 
keep empem3112 == 1
*append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\no19.dta"
*append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\ne19.dta"
*append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\se19.dta"
*append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\su19.dta"

*save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\media_municip_19.dta"














*use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"
*describe ncognitivo nsocial nmotor nmed
*destring ncognitivo nsocial nmotor nmed, replace

********** CENTROOESTE
use "D:\Bases\MTE\Vinc\centrooeste2020_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"






drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\co20.dta", replace

************************************************** NORTE

use "D:\Bases\MTE\Vinc\norte2020_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"






drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\no20.dta", replace

************************************************* NORDESTE

use "D:\Bases\MTE\Vinc\nordeste2020_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"






drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\ne20.dta", replace

********************************************* SUDESTE
*use "D:\Bases\MTE\Vinc\sudeste2020_limpo.dta", clear 
keep empem3112 == 1

*merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"

*
  *| substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  *| substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


*drop if missing(ncognitivo)

*egen media_ncognitivo = mean(ncognitivo), by(municipio)
*egen media_nsocial2 = mean(nsocial), by(municipio)
*egen media_nmotor = mean(nmotor), by(municipio)
*egen media_nmed = mean(nmed), by(municipio)

*bysort municipio: egen first_obs = min(_n)
*keep if empem3112 == "1"
*drop first_obs

*keep municipio ncognitivo nsocial nmotor nmed

*save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\se20.dta", replace

********************************************* SUL
use "D:\Bases\MTE\Vinc\sul2020_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"






drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\su20.dta", replace

*******************************************************
  *******************************************************
  
  *use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\co20.dta", clear 
keep empem3112 == 1
*append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\no20.dta"
*append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\ne20.dta"
*append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\se20.dta"
*append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\su20.dta"

*save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\media_municip_20.dta"










*use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"
*describe ncognitivo nsocial nmotor nmed
*destring ncognitivo nsocial nmotor nmed, replace

********** CENTROOESTE
use "D:\Bases\MTE\Vinc\centrooeste2021_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"






drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\co21.dta", replace

************************************************** NORTE

use "D:\Bases\MTE\Vinc\norte2021_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"






drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\no21.dta", replace

************************************************* NORDESTE

use "D:\Bases\MTE\Vinc\nordeste2021_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"






drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\ne21.dta", replace

********************************************* SUDESTE
*use "D:\Bases\MTE\Vinc\sudeste2021_limpo.dta", clear 
keep empem3112 == 1

*merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"

*
  * | substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93" ///
  *  | substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99"


*drop if missing(ncognitivo)

*egen media_ncognitivo = mean(ncognitivo), by(municipio)
*egen media_nsocial2 = mean(nsocial), by(municipio)
*egen media_nmotor = mean(nmotor), by(municipio)
*egen media_nmed = mean(nmed), by(municipio)

*bysort municipio: egen first_obs = min(_n)
*keep if empem3112 == "1"
*drop first_obs

*keep municipio ncognitivo nsocial nmotor nmed

*save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\se21.dta", replace

********************************************* SUL
use "D:\Bases\MTE\Vinc\sul2021_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"






drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\su21.dta", replace

*******************************************************
  *******************************************************
  
  *use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\co21.dta", clear 
keep empem3112 == 1
*append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\no21.dta"
*append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\ne21.dta"
*append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\se21.dta"
*append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\su21.dta"

*save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\media_municip_21.dta"
























**************************************** SUDESTE 19-21
****** sp

use "D:\Bases\MTE\Vinc\mgesrj2019_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"






drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\mgesrj19.dta", replace

***********
  
  use "D:\Bases\MTE\Vinc\mgesrj2020_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"






drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\mgesrj20.dta", replace

***************
  
  use "D:\Bases\MTE\Vinc\mgesrj2021_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"






drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\mgesrj21.dta", replace











*********************** sp

use "D:\Bases\MTE\Vinc\sp2019_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"






drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\sp19.dta", replace


**********
  
  use "D:\Bases\MTE\Vinc\sp2020_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"






drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\sp20.dta", replace

***************
  
  use "D:\Bases\MTE\Vinc\sp2021_limpo.dta", clear 
keep empem3112 == 1

merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\skills_cbo - Copia.dta"






drop if missing(ncognitivo)

egen media_ncognitivo = mean(ncognitivo), by(municipio)
egen media_nsocial2 = mean(nsocial), by(municipio)
egen media_nmotor = mean(nmotor), by(municipio)
egen media_nmed = mean(nmed), by(municipio)

bysort municipio: egen first_obs = min(_n)
keep if empem3112 == "1"
drop first_obs

keep municipio ncognitivo nsocial nmotor nmed

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\sp21.dta", replace












**********************************************************
  
  
  use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\co19.dta", clear 
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\no19.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\ne19.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\mgesrj19.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\sp19.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\su19.dta"

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\media_municip_19.dta"

*******************
  
  use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\co20.dta", clear 
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\no20.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\ne20.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\mgesrj20.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\sp20.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\su20.dta"

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\media_municip_20.dta"



****************************
  
  use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\co21.dta", clear 
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\no21.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\ne21.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\mgesrj21.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\sp21.dta"
append using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\su21.dta"

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\todos os setores\media_municip_21.dta"








































































// Carregar o dataset cognitivo
*use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo.dta", clear 

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl duplicatas na variável ocup2002
*duplicates report ocup2002

// Listar duplicatas, se houver
*duplicates list ocup2002

duplicates drop ocup2002, force
// Salvar o dataset sem duplicatas
*save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique.dta", replace


*************************** CENTROOESTE

// Carregar o dataset mestre co03
use "D:\Bases\MTE\Vinc\centrooeste2003_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2003_com_matched_cognitivo.dta", replace

use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2003_com_matched_cognitivo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)

collapse (mean) proportion_matched, by(municipio)







save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co03_prop_cognitivo_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co03
use "D:\Bases\MTE\Vinc\nordeste2003_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2003_com_matched_cognitivo.dta", replace

use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2003_com_matched_cognitivo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)

collapse (mean) proportion_matched, by(municipio)







save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne03_prop_cognitivo_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co03
use "D:\Bases\MTE\Vinc\norte2003_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2003_com_matched_cognitivo.dta", replace

use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2003_com_matched_cognitivo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)

collapse (mean) proportion_matched, by(municipio)







save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no03_prop_cognitivo_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co03
use "D:\Bases\MTE\Vinc\sudeste2003_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
*save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2003_com_matched_cognitivo.dta", replace

use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2003_com_matched_cognitivo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se03_prop_cognitivo_meiodocaminho.dta", replace

use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se03_prop_cognitivo_meiodocaminho.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)

// Criar um dataset com a proporção por município
collapse (mean) proportion_matched, by(municipio)

// Salvar o novo dataset
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se03_prop_cognitivo_b.dta", replace






*********************** SUL


// Carregar o dataset mestre co03
use "D:\Bases\MTE\Vinc\sul2003_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2003_com_matched_cognitivo.dta", replace

use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2003_com_matched_cognitivo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)

collapse (mean) proportion_matched, by(municipio)







save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su03_prop_cognitivo_b.dta", replace











*************************** CENTROOESTE

// Carregar o dataset mestre co04
use "D:\Bases\MTE\Vinc\centrooeste2004_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2004_com_matched_cognitivo.dta", replace



// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co04_prop_cognitivo_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co04
use "D:\Bases\MTE\Vinc\nordeste2004_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2004_com_matched_cognitivo.dta", replace



// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne04_prop_cognitivo_b.dta", replace








************************** NORTE


// Carregar o dataset mestre co04
use "D:\Bases\MTE\Vinc\norte2004_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2004_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no04_prop_cognitivo_b.dta", replace



















************************** SUDESTE


// Carregar o dataset mestre co04
use "D:\Bases\MTE\Vinc\sudeste2004_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2004_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se04_prop_cognitivo_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co04
use "D:\Bases\MTE\Vinc\sul2004_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2004_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su04_prop_cognitivo_b.dta", replace






















*************************** CENTROOESTE

// Carregar o dataset mestre co05
use "D:\Bases\MTE\Vinc\centrooeste2005_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2005_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co05_prop_cognitivo_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co05
use "D:\Bases\MTE\Vinc\nordeste2005_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2005_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne05_prop_cognitivo_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co05
use "D:\Bases\MTE\Vinc\norte2005_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2005_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no05_prop_cognitivo_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co05
use "D:\Bases\MTE\Vinc\sudeste2005_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2005_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se05_prop_cognitivo_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co05
use "D:\Bases\MTE\Vinc\sul2005_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2005_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su05_prop_cognitivo_b.dta", replace





























*************************** CENTROOESTE

// Carregar o dataset mestre co06
use "D:\Bases\MTE\Vinc\centrooeste2006_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2006_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co06_prop_cognitivo_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co06
use "D:\Bases\MTE\Vinc\nordeste2006_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2006_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne06_prop_cognitivo_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co06
use "D:\Bases\MTE\Vinc\norte2006_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2006_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no06_prop_cognitivo_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co06
use "D:\Bases\MTE\Vinc\sudeste2006_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2006_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se06_prop_cognitivo_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co06
use "D:\Bases\MTE\Vinc\sul2006_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2006_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su06_prop_cognitivo_b.dta", replace
























*************************** CENTROOESTE

// Carregar o dataset mestre co07
use "D:\Bases\MTE\Vinc\centrooeste2007_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2007_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co07_prop_cognitivo_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co07
use "D:\Bases\MTE\Vinc\nordeste2007_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2007_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne07_prop_cognitivo_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co07
use "D:\Bases\MTE\Vinc\norte2007_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2007_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no07_prop_cognitivo_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co07
use "D:\Bases\MTE\Vinc\sudeste2007_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2007_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se07_prop_cognitivo_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co07
use "D:\Bases\MTE\Vinc\sul2007_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2007_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su07_prop_cognitivo_b.dta", replace






















*************************** CENTROOESTE

// Carregar o dataset mestre co08
use "D:\Bases\MTE\Vinc\centrooeste2008_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2008_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co08_prop_cognitivo_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co08
use "D:\Bases\MTE\Vinc\nordeste2008_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2008_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne08_prop_cognitivo_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co08
use "D:\Bases\MTE\Vinc\norte2008_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2008_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no08_prop_cognitivo_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co08
use "D:\Bases\MTE\Vinc\sudeste2008_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2008_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se08_prop_cognitivo_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co08
use "D:\Bases\MTE\Vinc\sul2008_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2008_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su08_prop_cognitivo_b.dta", replace



























*************************** CENTROOESTE

// Carregar o dataset mestre co09
use "D:\Bases\MTE\Vinc\centrooeste2009_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2009_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co09_prop_cognitivo_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co09
use "D:\Bases\MTE\Vinc\nordeste2009_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2009_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne09_prop_cognitivo_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co09
use "D:\Bases\MTE\Vinc\norte2009_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2009_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no09_prop_cognitivo_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co09
use "D:\Bases\MTE\Vinc\sudeste2009_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2009_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se09_prop_cognitivo_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co09
use "D:\Bases\MTE\Vinc\sul2009_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2009_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su09_prop_cognitivo_b.dta", replace

















*************************** CENTROOESTE

// Carregar o dataset mestre co10
use "D:\Bases\MTE\Vinc\centrooeste2010_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2010_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co10_prop_cognitivo_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co10
use "D:\Bases\MTE\Vinc\nordeste2010_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2010_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne10_prop_cognitivo_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co10
use "D:\Bases\MTE\Vinc\norte2010_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2010_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no10_prop_cognitivo_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co10
use "D:\Bases\MTE\Vinc\sudeste2010_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2010_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se10_prop_cognitivo_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co10
use "D:\Bases\MTE\Vinc\sul2010_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2010_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su10_prop_cognitivo_b.dta", replace

























*************************** CENTROOESTE

// Carregar o dataset mestre co11
use "D:\Bases\MTE\Vinc\centrooeste2011_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2011_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co11_prop_cognitivo_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co11
use "D:\Bases\MTE\Vinc\nordeste2011_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2011_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne11_prop_cognitivo_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co11
use "D:\Bases\MTE\Vinc\norte2011_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2011_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no11_prop_cognitivo_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co11
use "D:\Bases\MTE\Vinc\sudeste2011_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2011_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se11_prop_cognitivo_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co11
use "D:\Bases\MTE\Vinc\sul2011_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2011_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su11_prop_cognitivo_b.dta", replace




















*************************** CENTROOESTE

// Carregar o dataset mestre co12
use "D:\Bases\MTE\Vinc\centrooeste2012_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2012_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co12_prop_cognitivo_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co12
use "D:\Bases\MTE\Vinc\nordeste2012_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2012_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne12_prop_cognitivo_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co12
use "D:\Bases\MTE\Vinc\norte2012_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2012_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no12_prop_cognitivo_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co12
use "D:\Bases\MTE\Vinc\sudeste2012_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2012_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se12_prop_cognitivo_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co12
use "D:\Bases\MTE\Vinc\sul2012_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2012_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su12_prop_cognitivo_b.dta", replace


























*************************** CENTROOESTE

// Carregar o dataset mestre co13
use "D:\Bases\MTE\Vinc\centrooeste2013_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2013_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co13_prop_cognitivo_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co13
use "D:\Bases\MTE\Vinc\nordeste2013_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2013_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne13_prop_cognitivo_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co13
use "D:\Bases\MTE\Vinc\norte2013_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2013_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no13_prop_cognitivo_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co13
use "D:\Bases\MTE\Vinc\sudeste2013_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2013_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se13_prop_cognitivo_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co13
use "D:\Bases\MTE\Vinc\sul2013_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2013_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su13_prop_cognitivo_b.dta", replace





















*************************** CENTROOESTE

// Carregar o dataset mestre co14
use "D:\Bases\MTE\Vinc\centrooeste2014_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2014_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co14_prop_cognitivo_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co14
use "D:\Bases\MTE\Vinc\nordeste2014_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2014_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne14_prop_cognitivo_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co14
use "D:\Bases\MTE\Vinc\norte2014_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2014_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no14_prop_cognitivo_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co14
use "D:\Bases\MTE\Vinc\sudeste2014_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2014_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se14_prop_cognitivo_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co14
use "D:\Bases\MTE\Vinc\sul2014_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2014_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su14_prop_cognitivo_b.dta", replace
























*************************** CENTROOESTE

// Carregar o dataset mestre co15
use "D:\Bases\MTE\Vinc\centrooeste2015_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2015_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co15_prop_cognitivo_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co15
use "D:\Bases\MTE\Vinc\nordeste2015_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2015_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne15_prop_cognitivo_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co15
use "D:\Bases\MTE\Vinc\norte2015_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2015_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no15_prop_cognitivo_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co15
use "D:\Bases\MTE\Vinc\sudeste2015_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
*save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2015_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se15_prop_cognitivo_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co15
use "D:\Bases\MTE\Vinc\sul2015_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2015_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su15_prop_cognitivo_b.dta", replace




























*************************** CENTROOESTE

// Carregar o dataset mestre co16
use "D:\Bases\MTE\Vinc\centrooeste2016_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2016_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co16_prop_cognitivo_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co16
use "D:\Bases\MTE\Vinc\nordeste2016_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2016_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne16_prop_cognitivo_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co16
use "D:\Bases\MTE\Vinc\norte2016_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2016_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no16_prop_cognitivo_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co16
use "D:\Bases\MTE\Vinc\sudeste2016_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2016_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se16_prop_cognitivo_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co16
use "D:\Bases\MTE\Vinc\sul2016_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2016_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su16_prop_cognitivo_b.dta", replace


























*************************** CENTROOESTE

// Carregar o dataset mestre co17
use "D:\Bases\MTE\Vinc\centrooeste2017_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2017_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co17_prop_cognitivo_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co17
use "D:\Bases\MTE\Vinc\nordeste2017_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2017_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne17_prop_cognitivo_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co17
use "D:\Bases\MTE\Vinc\norte2017_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2017_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no17_prop_cognitivo_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co17
use "D:\Bases\MTE\Vinc\sudeste2017_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2017_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se17_prop_cognitivo_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co17
use "D:\Bases\MTE\Vinc\sul2017_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2017_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su17_prop_cognitivo_b.dta", replace


























*************************** CENTROOESTE

// Carregar o dataset mestre co18
use "D:\Bases\MTE\Vinc\centrooeste2018_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2018_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co18_prop_cognitivo_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co18
use "D:\Bases\MTE\Vinc\nordeste2018_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2018_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne18_prop_cognitivo_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co18
use "D:\Bases\MTE\Vinc\norte2018_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2018_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no18_prop_cognitivo_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co18
use "D:\Bases\MTE\Vinc\sudeste2018_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2018_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se18_prop_cognitivo_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co18
use "D:\Bases\MTE\Vinc\sul2018_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2018_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su18_prop_cognitivo_b.dta", replace


















*************************** CENTROOESTE

// Carregar o dataset mestre co19
use "D:\Bases\MTE\Vinc\centrooeste2019_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2019_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co19_prop_cognitivo_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co19
use "D:\Bases\MTE\Vinc\nordeste2019_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2019_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne19_prop_cognitivo_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co19
use "D:\Bases\MTE\Vinc\norte2019_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2019_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no19_prop_cognitivo_b.dta", replace





************************** mgesrj


// Carregar o dataset mestre co19
use "D:\Bases\MTE\Vinc\mgesrj2019_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\mgesrj2019_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)          	
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\mgesrj19_prop_cognitivo_b.dta", replace





************************** sp


// Carregar o dataset mestre co19
use "D:\Bases\MTE\Vinc\sp2019_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sp2019_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)          	
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sp19_prop_cognitivo_b.dta", replace






*********************** SUL


// Carregar o dataset mestre co19
use "D:\Bases\MTE\Vinc\sul2019_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2019_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su19_prop_cognitivo_b.dta", replace

















*************************** CENTROOESTE

// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\centrooeste2020_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2020_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co20_prop_cognitivo_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\nordeste2020_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2020_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne20_prop_cognitivo_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\norte2020_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2020_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no20_prop_cognitivo_b.dta", replace





************************** mgesrj


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\mgesrj2020_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\mgesrj2020_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)          	
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\mgesrj20_prop_cognitivo_b.dta", replace





************************** sp


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\sp2020_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sp2020_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)          	
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sp20_prop_cognitivo_b.dta", replace






*********************** SUL


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\sul2020_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2020_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su20_prop_cognitivo_b.dta", replace





















*************************** CENTROOESTE

// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\centrooeste2021_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2021_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co21_prop_cognitivo_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\nordeste2021_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2021_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne21_prop_cognitivo_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\norte2021_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2021_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no21_prop_cognitivo_b.dta", replace





************************** mgesrj


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\mgesrj2021_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\mgesrj2021_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)          	
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\mgesrj21_prop_cognitivo_b.dta", replace





************************** sp


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\sp2021_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sp2021_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)          	
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sp21_prop_cognitivo_b.dta", replace






*********************** SUL


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\sul2021_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\cognitivo_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2021_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su21_prop_cognitivo_b.dta", replace



































































// Carregar o dataset social
*use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl duplicatas na variável ocup2002
*duplicates report ocup2002

// Listar duplicatas, se houver
*duplicates list ocup2002

duplicates drop ocup2002, force
// Salvar o dataset sem duplicatas
*save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique.dta", replace


***********************
  // Carregar o dataset social copia
*use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social - Copia.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl duplicatas na variável ocup2002
*duplicates report ocup2002

// Listar duplicatas, se houver
*duplicates list ocup2002

*duplicates drop ocup2002, force
*tostring ocup2002, replace
// Salvar o dataset sem duplicatas
*save "D:\Pessoal\Luis_Souza\Agropecuaria\rais *skills\ranking\terciario\social_unique_copia.dta", replace





*************************** CENTROOESTE

// Carregar o dataset mestre co03
use "D:\Bases\MTE\Vinc\centrooeste2003_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2003_com_matched_social.dta", replace



// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co03_prop_social_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co03
use "D:\Bases\MTE\Vinc\nordeste2003_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2003_com_matched_social.dta", replace



// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne03_prop_social_b.dta", replace








************************** NORTE


// Carregar o dataset mestre co03
use "D:\Bases\MTE\Vinc\norte2003_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2003_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no03_prop_social_b.dta", replace



















************************** SUDESTE


// Carregar o dataset mestre co03
use "D:\Bases\MTE\Vinc\sudeste2003_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2003_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se03_prop_social_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co03
use "D:\Bases\MTE\Vinc\sul2003_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2003_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su03_prop_social_b.dta", replace














*************************** CENTROOESTE

// Carregar o dataset mestre co04
use "D:\Bases\MTE\Vinc\centrooeste2004_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2004_com_matched_social.dta", replace



// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co04_prop_social_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co04
use "D:\Bases\MTE\Vinc\nordeste2004_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2004_com_matched_social.dta", replace



// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne04_prop_social_b.dta", replace








************************** NORTE


// Carregar o dataset mestre co04
use "D:\Bases\MTE\Vinc\norte2004_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2004_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no04_prop_social_b.dta", replace



















************************** SUDESTE


// Carregar o dataset mestre co04
use "D:\Bases\MTE\Vinc\sudeste2004_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2004_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se04_prop_social_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co04
use "D:\Bases\MTE\Vinc\sul2004_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2004_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su04_prop_social_b.dta", replace






















*************************** CENTROOESTE

// Carregar o dataset mestre co05
use "D:\Bases\MTE\Vinc\centrooeste2005_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2005_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co05_prop_social_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co05
use "D:\Bases\MTE\Vinc\nordeste2005_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2005_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne05_prop_social_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co05
use "D:\Bases\MTE\Vinc\norte2005_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2005_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no05_prop_social_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co05
use "D:\Bases\MTE\Vinc\sudeste2005_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2005_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se05_prop_social_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co05
use "D:\Bases\MTE\Vinc\sul2005_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2005_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su05_prop_social_b.dta", replace





























*************************** CENTROOESTE

// Carregar o dataset mestre co06
use "D:\Bases\MTE\Vinc\centrooeste2006_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2006_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co06_prop_social_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co06
use "D:\Bases\MTE\Vinc\nordeste2006_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2006_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne06_prop_social_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co06
use "D:\Bases\MTE\Vinc\norte2006_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2006_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no06_prop_social_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co06
use "D:\Bases\MTE\Vinc\sudeste2006_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2006_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se06_prop_social_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co06
use "D:\Bases\MTE\Vinc\sul2006_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2006_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su06_prop_social_b.dta", replace
























*************************** CENTROOESTE

// Carregar o dataset mestre co07
use "D:\Bases\MTE\Vinc\centrooeste2007_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2007_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co07_prop_social_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co07
use "D:\Bases\MTE\Vinc\nordeste2007_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2007_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne07_prop_social_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co07
use "D:\Bases\MTE\Vinc\norte2007_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2007_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no07_prop_social_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co07
use "D:\Bases\MTE\Vinc\sudeste2007_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2007_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se07_prop_social_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co07
use "D:\Bases\MTE\Vinc\sul2007_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2007_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su07_prop_social_b.dta", replace






















*************************** CENTROOESTE

// Carregar o dataset mestre co08
use "D:\Bases\MTE\Vinc\centrooeste2008_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2008_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co08_prop_social_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co08
use "D:\Bases\MTE\Vinc\nordeste2008_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2008_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne08_prop_social_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co08
use "D:\Bases\MTE\Vinc\norte2008_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2008_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no08_prop_social_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co08
use "D:\Bases\MTE\Vinc\sudeste2008_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2008_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se08_prop_social_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co08
use "D:\Bases\MTE\Vinc\sul2008_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2008_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su08_prop_social_b.dta", replace



























*************************** CENTROOESTE

// Carregar o dataset mestre co09
use "D:\Bases\MTE\Vinc\centrooeste2009_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2009_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co09_prop_social_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co09
use "D:\Bases\MTE\Vinc\nordeste2009_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2009_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne09_prop_social_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co09
use "D:\Bases\MTE\Vinc\norte2009_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2009_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no09_prop_social_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co09
use "D:\Bases\MTE\Vinc\sudeste2009_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2009_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se09_prop_social_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co09
use "D:\Bases\MTE\Vinc\sul2009_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2009_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su09_prop_social_b.dta", replace

















*************************** CENTROOESTE

// Carregar o dataset mestre co10
use "D:\Bases\MTE\Vinc\centrooeste2010_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2010_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co10_prop_social_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co10
use "D:\Bases\MTE\Vinc\nordeste2010_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2010_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne10_prop_social_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co10
use "D:\Bases\MTE\Vinc\norte2010_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2010_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no10_prop_social_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co10
use "D:\Bases\MTE\Vinc\sudeste2010_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2010_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se10_prop_social_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co10
use "D:\Bases\MTE\Vinc\sul2010_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2010_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su10_prop_social_b.dta", replace

























*************************** CENTROOESTE

// Carregar o dataset mestre co11
use "D:\Bases\MTE\Vinc\centrooeste2011_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2011_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) form at(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co11_prop_social_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co11
use "D:\Bases\MTE\Vinc\nordeste2011_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2011_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne11_prop_social_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co11
use "D:\Bases\MTE\Vinc\norte2011_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2011_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no11_prop_social_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co11
use "D:\Bases\MTE\Vinc\sudeste2011_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2011_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se11_prop_social_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co11
use "D:\Bases\MTE\Vinc\sul2011_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2011_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su11_prop_social_b.dta", replace




















*************************** CENTROOESTE

// Carregar o dataset mestre co12
use "D:\Bases\MTE\Vinc\centrooeste2012_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2012_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co12_prop_social_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co12
use "D:\Bases\MTE\Vinc\nordeste2012_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2012_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne12_prop_social_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co12
use "D:\Bases\MTE\Vinc\norte2012_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2012_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no12_prop_social_b.dta", replace








************************** SUDESTE


// Carregar o dataset mestre co12
use "D:\Bases\MTE\Vinc\sudeste2012_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2012_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se12_prop_social_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co12
use "D:\Bases\MTE\Vinc\sul2012_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2012_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su12_prop_social_b.dta", replace


























*************************** CENTROOESTE

// Carregar o dataset mestre co13
use "D:\Bases\MTE\Vinc\centrooeste2013_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2013_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co13_prop_social_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co13
use "D:\Bases\MTE\Vinc\nordeste2013_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2013_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne13_prop_social_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co13
use "D:\Bases\MTE\Vinc\norte2013_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2013_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no13_prop_social_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co13
use "D:\Bases\MTE\Vinc\sudeste2013_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2013_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se13_prop_social_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co13
use "D:\Bases\MTE\Vinc\sul2013_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2013_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su13_prop_social_b.dta", replace





















*************************** CENTROOESTE

// Carregar o dataset mestre co14
use "D:\Bases\MTE\Vinc\centrooeste2014_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2014_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co14_prop_social_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co14
use "D:\Bases\MTE\Vinc\nordeste2014_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2014_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne14_prop_social_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co14
use "D:\Bases\MTE\Vinc\norte2014_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2014_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no14_prop_social_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co14
use "D:\Bases\MTE\Vinc\sudeste2014_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2014_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se14_prop_social_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co14
use "D:\Bases\MTE\Vinc\sul2014_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2014_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su14_prop_social_b.dta", replace
























*************************** CENTROOESTE

// Carregar o dataset mestre co15
use "D:\Bases\MTE\Vinc\centrooeste2015_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2015_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co15_prop_social_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co15
use "D:\Bases\MTE\Vinc\nordeste2015_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2015_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne15_prop_social_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co15
use "D:\Bases\MTE\Vinc\norte2015_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2015_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no15_prop_social_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co15
use "D:\Bases\MTE\Vinc\sudeste2015_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2015_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se15_prop_social_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co15
use "D:\Bases\MTE\Vinc\sul2015_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2015_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su15_prop_social_b.dta", replace




























*************************** CENTROOESTE

// Carregar o dataset mestre co16
use "D:\Bases\MTE\Vinc\centrooeste2016_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2016_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co16_prop_social_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co16
use "D:\Bases\MTE\Vinc\nordeste2016_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2016_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne16_prop_social_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co16
use "D:\Bases\MTE\Vinc\norte2016_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2016_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no16_prop_social_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co16
use "D:\Bases\MTE\Vinc\sudeste2016_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2016_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se16_prop_social_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co16
use "D:\Bases\MTE\Vinc\sul2016_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2016_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su16_prop_social_b.dta", replace


























*************************** CENTROOESTE

// Carregar o dataset mestre co17
use "D:\Bases\MTE\Vinc\centrooeste2017_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2017_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co17_prop_social_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co17
use "D:\Bases\MTE\Vinc\nordeste2017_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2017_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne17_prop_social_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co17
use "D:\Bases\MTE\Vinc\norte2017_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2017_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no17_prop_social_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co17
use "D:\Bases\MTE\Vinc\sudeste2017_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2017_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se17_prop_social_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co17
use "D:\Bases\MTE\Vinc\sul2017_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2017_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su17_prop_social_b.dta", replace


























*************************** CENTROOESTE

// Carregar o dataset mestre co18
use "D:\Bases\MTE\Vinc\centrooeste2018_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2018_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co18_prop_social_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co18
use "D:\Bases\MTE\Vinc\nordeste2018_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2018_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne18_prop_social_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co18
use "D:\Bases\MTE\Vinc\norte2018_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2018_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no18_prop_social_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co18
use "D:\Bases\MTE\Vinc\sudeste2018_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2018_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se18_prop_social_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co18
use "D:\Bases\MTE\Vinc\sul2018_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2018_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su18_prop_social_b.dta", replace


















*************************** CENTROOESTE

// Carregar o dataset mestre co19
use "D:\Bases\MTE\Vinc\centrooeste2019_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2019_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co19_prop_social_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co19
use "D:\Bases\MTE\Vinc\nordeste2019_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2019_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne19_prop_social_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co19
use "D:\Bases\MTE\Vinc\norte2019_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2019_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no19_prop_social_b.dta", replace





************************** mgesrj


// Carregar o dataset mestre co19
use "D:\Bases\MTE\Vinc\mgesrj2019_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\mgesrj2019_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)          	
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)






collapse (mean) proportion_matched, by(municipio)


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\mgesrj19_prop_social_b.dta", replace





************************** sp


// Carregar o dataset mestre co19
use "D:\Bases\MTE\Vinc\sp2019_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sp2019_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)          	
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)






collapse (mean) proportion_matched, by(municipio)


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sp19_prop_social_b.dta", replace






*********************** SUL


// Carregar o dataset mestre co19
use "D:\Bases\MTE\Vinc\sul2019_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2019_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su19_prop_social_b.dta", replace

















*************************** CENTROOESTE

// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\centrooeste2020_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2020_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co20_prop_social_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\nordeste2020_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2020_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne20_prop_social_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\norte2020_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2020_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no20_prop_social_b.dta", replace





************************** mgesrj


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\mgesrj2020_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\mgesrj2020_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)          	
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)






collapse (mean) proportion_matched, by(municipio)


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\mgesrj20_prop_social_b.dta", replace





************************** sp


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\sp2020_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sp2020_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)          	
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)






collapse (mean) proportion_matched, by(municipio)


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sp20_prop_social_b.dta", replace






*********************** SUL


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\sul2020_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2020_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su20_prop_social_b.dta", replace





















*************************** CENTROOESTE

// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\centrooeste2021_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2021_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co21_prop_social_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\nordeste2021_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2021_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne21_prop_social_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\norte2021_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2021_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no21_prop_social_b.dta", replace





************************** mgesrj


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\mgesrj2021_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\mgesrj2021_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)          	
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)






collapse (mean) proportion_matched, by(municipio)


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\mgesrj21_prop_social_b.dta", replace





************************** sp


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\sp2021_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sp2021_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)          	
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)






collapse (mean) proportion_matched, by(municipio)


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sp21_prop_social_b.dta", replace






*********************** SUL


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\sul2021_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\social_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2021_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su21_prop_social_b.dta", replace
























// Carregar o dataset motor
*use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl duplicatas na variável ocup2002
*duplicates report ocup2002

// Listar duplicatas, se houver
*duplicates list ocup2002

*duplicates drop ocup2002, force
// Salvar o dataset sem duplicatas
*save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique.dta", replace


***********************
  // Carregar o dataset motor copia
*use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor - Copia.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl duplicatas na variável ocup2002
*duplicates report ocup2002

// Listar duplicatas, se houver
*duplicates list ocup2002

*duplicates drop ocup2002, force
*tostring ocup2002, replace
// Salvar o dataset sem duplicatas
*save "D:\Pessoal\Luis_Souza\Agropecuaria\rais *skills\ranking\terciario\motor_unique_copia.dta", replace





*************************** CENTROOESTE

// Carregar o dataset mestre co03
use "D:\Bases\MTE\Vinc\centrooeste2003_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2003_com_matched_motor.dta", replace



// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co03_prop_motor_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co03
use "D:\Bases\MTE\Vinc\nordeste2003_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2003_com_matched_motor.dta", replace



// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne03_prop_motor_b.dta", replace








************************** NORTE


// Carregar o dataset mestre co03
use "D:\Bases\MTE\Vinc\norte2003_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2003_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no03_prop_motor_b.dta", replace



















************************** SUDESTE


// Carregar o dataset mestre co03
use "D:\Bases\MTE\Vinc\sudeste2003_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2003_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se03_prop_motor_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co03
use "D:\Bases\MTE\Vinc\sul2003_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2003_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su03_prop_motor_b.dta", replace














*************************** CENTROOESTE

// Carregar o dataset mestre co04
use "D:\Bases\MTE\Vinc\centrooeste2004_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2004_com_matched_motor.dta", replace



// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co04_prop_motor_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co04
use "D:\Bases\MTE\Vinc\nordeste2004_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2004_com_matched_motor.dta", replace



// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne04_prop_motor_b.dta", replace








************************** NORTE


// Carregar o dataset mestre co04
use "D:\Bases\MTE\Vinc\norte2004_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2004_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no04_prop_motor_b.dta", replace



















************************** SUDESTE


// Carregar o dataset mestre co04
use "D:\Bases\MTE\Vinc\sudeste2004_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2004_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se04_prop_motor_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co04
use "D:\Bases\MTE\Vinc\sul2004_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2004_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su04_prop_motor_b.dta", replace






















*************************** CENTROOESTE

// Carregar o dataset mestre co05
use "D:\Bases\MTE\Vinc\centrooeste2005_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2005_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co05_prop_motor_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co05
use "D:\Bases\MTE\Vinc\nordeste2005_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2005_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne05_prop_motor_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co05
use "D:\Bases\MTE\Vinc\norte2005_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2005_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no05_prop_motor_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co05
use "D:\Bases\MTE\Vinc\sudeste2005_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2005_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se05_prop_motor_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co05
use "D:\Bases\MTE\Vinc\sul2005_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2005_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su05_prop_motor_b.dta", replace





























*************************** CENTROOESTE

// Carregar o dataset mestre co06
use "D:\Bases\MTE\Vinc\centrooeste2006_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2006_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co06_prop_motor_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co06
use "D:\Bases\MTE\Vinc\nordeste2006_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2006_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne06_prop_motor_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co06
use "D:\Bases\MTE\Vinc\norte2006_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2006_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no06_prop_motor_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co06
use "D:\Bases\MTE\Vinc\sudeste2006_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2006_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se06_prop_motor_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co06
use "D:\Bases\MTE\Vinc\sul2006_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2006_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su06_prop_motor_b.dta", replace
























*************************** CENTROOESTE

// Carregar o dataset mestre co07
use "D:\Bases\MTE\Vinc\centrooeste2007_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2007_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co07_prop_motor_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co07
use "D:\Bases\MTE\Vinc\nordeste2007_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2007_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne07_prop_motor_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co07
use "D:\Bases\MTE\Vinc\norte2007_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2007_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no07_prop_motor_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co07
use "D:\Bases\MTE\Vinc\sudeste2007_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2007_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se07_prop_motor_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co07
use "D:\Bases\MTE\Vinc\sul2007_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2007_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su07_prop_motor_b.dta", replace






















*************************** CENTROOESTE

// Carregar o dataset mestre co08
use "D:\Bases\MTE\Vinc\centrooeste2008_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2008_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co08_prop_motor_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co08
use "D:\Bases\MTE\Vinc\nordeste2008_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2008_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne08_prop_motor_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co08
use "D:\Bases\MTE\Vinc\norte2008_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2008_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no08_prop_motor_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co08
use "D:\Bases\MTE\Vinc\sudeste2008_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2008_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se08_prop_motor_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co08
use "D:\Bases\MTE\Vinc\sul2008_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2008_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su08_prop_motor_b.dta", replace



























*************************** CENTROOESTE

// Carregar o dataset mestre co09
use "D:\Bases\MTE\Vinc\centrooeste2009_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2009_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co09_prop_motor_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co09
use "D:\Bases\MTE\Vinc\nordeste2009_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2009_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne09_prop_motor_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co09
use "D:\Bases\MTE\Vinc\norte2009_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2009_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no09_prop_motor_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co09
use "D:\Bases\MTE\Vinc\sudeste2009_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2009_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se09_prop_motor_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co09
use "D:\Bases\MTE\Vinc\sul2009_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2009_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su09_prop_motor_b.dta", replace

















*************************** CENTROOESTE

// Carregar o dataset mestre co10
use "D:\Bases\MTE\Vinc\centrooeste2010_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2010_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co10_prop_motor_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co10
use "D:\Bases\MTE\Vinc\nordeste2010_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2010_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne10_prop_motor_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co10
use "D:\Bases\MTE\Vinc\norte2010_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2010_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no10_prop_motor_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co10
use "D:\Bases\MTE\Vinc\sudeste2010_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2010_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se10_prop_motor_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co10
use "D:\Bases\MTE\Vinc\sul2010_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2010_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su10_prop_motor_b.dta", replace

























*************************** CENTROOESTE

// Carregar o dataset mestre co11
use "D:\Bases\MTE\Vinc\centrooeste2011_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2011_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co11_prop_motor_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co11
use "D:\Bases\MTE\Vinc\nordeste2011_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2011_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne11_prop_motor_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co11
use "D:\Bases\MTE\Vinc\norte2011_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2011_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no11_prop_motor_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co11
use "D:\Bases\MTE\Vinc\sudeste2011_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2011_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se11_prop_motor_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co11
use "D:\Bases\MTE\Vinc\sul2011_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2011_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su11_prop_motor_b.dta", replace




















*************************** CENTROOESTE

// Carregar o dataset mestre co12
use "D:\Bases\MTE\Vinc\centrooeste2012_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2012_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co12_prop_motor_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co12
use "D:\Bases\MTE\Vinc\nordeste2012_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2012_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne12_prop_motor_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co12
use "D:\Bases\MTE\Vinc\norte2012_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2012_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no12_prop_motor_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co12
use "D:\Bases\MTE\Vinc\sudeste2012_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2012_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se12_prop_motor_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co12
use "D:\Bases\MTE\Vinc\sul2012_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2012_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su12_prop_motor_b.dta", replace


























*************************** CENTROOESTE

// Carregar o dataset mestre co13
use "D:\Bases\MTE\Vinc\centrooeste2013_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2013_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co13_prop_motor_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co13
use "D:\Bases\MTE\Vinc\nordeste2013_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2013_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne13_prop_motor_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co13
use "D:\Bases\MTE\Vinc\norte2013_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2013_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no13_prop_motor_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co13
use "D:\Bases\MTE\Vinc\sudeste2013_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2013_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se13_prop_motor_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co13
use "D:\Bases\MTE\Vinc\sul2013_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2013_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su13_prop_motor_b.dta", replace





















*************************** CENTROOESTE

// Carregar o dataset mestre co14
use "D:\Bases\MTE\Vinc\centrooeste2014_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2014_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co14_prop_motor_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co14
use "D:\Bases\MTE\Vinc\nordeste2014_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2014_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne14_prop_motor_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co14
use "D:\Bases\MTE\Vinc\norte2014_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2014_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no14_prop_motor_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co14
use "D:\Bases\MTE\Vinc\sudeste2014_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2014_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se14_prop_motor_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co14
use "D:\Bases\MTE\Vinc\sul2014_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2014_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su14_prop_motor_b.dta", replace
























*************************** CENTROOESTE

// Carregar o dataset mestre co15
use "D:\Bases\MTE\Vinc\centrooeste2015_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2015_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co15_prop_motor_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co15
use "D:\Bases\MTE\Vinc\nordeste2015_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2015_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne15_prop_motor_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co15
use "D:\Bases\MTE\Vinc\norte2015_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2015_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no15_prop_motor_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co15
use "D:\Bases\MTE\Vinc\sudeste2015_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2015_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se15_prop_motor_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co15
use "D:\Bases\MTE\Vinc\sul2015_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2015_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su15_prop_motor_b.dta", replace




























*************************** CENTROOESTE

// Carregar o dataset mestre co16
use "D:\Bases\MTE\Vinc\centrooeste2016_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2016_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co16_prop_motor_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co16
use "D:\Bases\MTE\Vinc\nordeste2016_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2016_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne16_prop_motor_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co16
use "D:\Bases\MTE\Vinc\norte2016_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2016_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no16_prop_motor_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co16
use "D:\Bases\MTE\Vinc\sudeste2016_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2016_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se16_prop_motor_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co16
use "D:\Bases\MTE\Vinc\sul2016_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2016_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su16_prop_motor_b.dta", replace


























*************************** CENTROOESTE

// Carregar o dataset mestre co17
use "D:\Bases\MTE\Vinc\centrooeste2017_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2017_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co17_prop_motor_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co17
use "D:\Bases\MTE\Vinc\nordeste2017_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2017_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne17_prop_motor_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co17
use "D:\Bases\MTE\Vinc\norte2017_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2017_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no17_prop_motor_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co17
use "D:\Bases\MTE\Vinc\sudeste2017_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2017_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se17_prop_motor_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co17
use "D:\Bases\MTE\Vinc\sul2017_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2017_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su17_prop_motor_b.dta", replace


























*************************** CENTROOESTE

// Carregar o dataset mestre co18
use "D:\Bases\MTE\Vinc\centrooeste2018_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2018_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co18_prop_motor_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co18
use "D:\Bases\MTE\Vinc\nordeste2018_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2018_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne18_prop_motor_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co18
use "D:\Bases\MTE\Vinc\norte2018_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2018_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no18_prop_motor_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co18
use "D:\Bases\MTE\Vinc\sudeste2018_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2018_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se18_prop_motor_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co18
use "D:\Bases\MTE\Vinc\sul2018_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2018_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su18_prop_motor_b.dta", replace


















*************************** CENTROOESTE

// Carregar o dataset mestre co19
use "D:\Bases\MTE\Vinc\centrooeste2019_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2019_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co19_prop_motor_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co19
use "D:\Bases\MTE\Vinc\nordeste2019_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2019_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne19_prop_motor_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co19
use "D:\Bases\MTE\Vinc\norte2019_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2019_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no19_prop_motor_b.dta", replace





************************** mgesrj


// Carregar o dataset mestre co19
use "D:\Bases\MTE\Vinc\mgesrj2019_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\mgesrj2019_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)          	
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)






collapse (mean) proportion_matched, by(municipio)


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\mgesrj19_prop_motor_b.dta", replace





************************** sp


// Carregar o dataset mestre co19
use "D:\Bases\MTE\Vinc\sp2019_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sp2019_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)          	
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)






collapse (mean) proportion_matched, by(municipio)


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sp19_prop_motor_b.dta", replace






*********************** SUL


// Carregar o dataset mestre co19
use "D:\Bases\MTE\Vinc\sul2019_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2019_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su19_prop_motor_b.dta", replace

















*************************** CENTROOESTE

// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\centrooeste2020_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2020_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co20_prop_motor_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\nordeste2020_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2020_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne20_prop_motor_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\norte2020_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2020_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no20_prop_motor_b.dta", replace





************************** mgesrj


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\mgesrj2020_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\mgesrj2020_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)          	
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)






collapse (mean) proportion_matched, by(municipio)


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\mgesrj20_prop_motor_b.dta", replace





************************** sp


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\sp2020_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sp2020_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)          	
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)






collapse (mean) proportion_matched, by(municipio)


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sp20_prop_motor_b.dta", replace






*********************** SUL


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\sul2020_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2020_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su20_prop_motor_b.dta", replace





















*************************** CENTROOESTE

// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\centrooeste2021_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2021_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co21_prop_motor_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\nordeste2021_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2021_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne21_prop_motor_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\norte2021_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2021_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no21_prop_motor_b.dta", replace





************************** mgesrj


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\mgesrj2021_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\mgesrj2021_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)          	
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)






collapse (mean) proportion_matched, by(municipio)


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\mgesrj21_prop_motor_b.dta", replace





************************** sp


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\sp2021_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sp2021_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)          	
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)






collapse (mean) proportion_matched, by(municipio)


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sp21_prop_motor_b.dta", replace






*********************** SUL


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\sul2021_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\motor_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2021_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su21_prop_motor_b.dta", replace



































// Carregar o dataset media
*use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl duplicatas na variável ocup2002
*duplicates report ocup2002

// Listar duplicatas, se houver
*duplicates list ocup2002

duplicates drop ocup2002, force
// Salvar o dataset sem duplicatas
*save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique.dta", replace


***********************
  // Carregar o dataset media copia
*use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media - Copia.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl duplicatas na variável ocup2002
*duplicates report ocup2002

// Listar duplicatas, se houver
*duplicates list ocup2002

*duplicates drop ocup2002, force
*tostring ocup2002, replace
// Salvar o dataset sem duplicatas
*save "D:\Pessoal\Luis_Souza\Agropecuaria\rais *skills\ranking\terciario\media_unique_copia.dta", replace





*************************** CENTROOESTE

// Carregar o dataset mestre co03
use "D:\Bases\MTE\Vinc\centrooeste2003_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2003_com_matched_media.dta", replace



// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co03_prop_media_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co03
use "D:\Bases\MTE\Vinc\nordeste2003_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2003_com_matched_media.dta", replace



// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne03_prop_media_b.dta", replace








************************** NORTE


// Carregar o dataset mestre co03
use "D:\Bases\MTE\Vinc\norte2003_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2003_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no03_prop_media_b.dta", replace



















************************** SUDESTE


// Carregar o dataset mestre co03
use "D:\Bases\MTE\Vinc\sudeste2003_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2003_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se03_prop_media_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co03
use "D:\Bases\MTE\Vinc\sul2003_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2003_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su03_prop_media_b.dta", replace














*************************** CENTROOESTE

// Carregar o dataset mestre co04
use "D:\Bases\MTE\Vinc\centrooeste2004_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2004_com_matched_media.dta", replace



// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co04_prop_media_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co04
use "D:\Bases\MTE\Vinc\nordeste2004_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2004_com_matched_media.dta", replace



// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne04_prop_media_b.dta", replace








************************** NORTE


// Carregar o dataset mestre co04
use "D:\Bases\MTE\Vinc\norte2004_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2004_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no04_prop_media_b.dta", replace



















************************** SUDESTE


// Carregar o dataset mestre co04
use "D:\Bases\MTE\Vinc\sudeste2004_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2004_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se04_prop_media_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co04
use "D:\Bases\MTE\Vinc\sul2004_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2004_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su04_prop_media_b.dta", replace






















*************************** CENTROOESTE

// Carregar o dataset mestre co05
use "D:\Bases\MTE\Vinc\centrooeste2005_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2005_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co05_prop_media_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co05
use "D:\Bases\MTE\Vinc\nordeste2005_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2005_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne05_prop_media_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co05
use "D:\Bases\MTE\Vinc\norte2005_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2005_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no05_prop_media_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co05
use "D:\Bases\MTE\Vinc\sudeste2005_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2005_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se05_prop_media_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co05
use "D:\Bases\MTE\Vinc\sul2005_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2005_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su05_prop_media_b.dta", replace





























*************************** CENTROOESTE

// Carregar o dataset mestre co06
use "D:\Bases\MTE\Vinc\centrooeste2006_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2006_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co06_prop_media_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co06
use "D:\Bases\MTE\Vinc\nordeste2006_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2006_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne06_prop_media_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co06
use "D:\Bases\MTE\Vinc\norte2006_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2006_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no06_prop_media_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co06
use "D:\Bases\MTE\Vinc\sudeste2006_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2006_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se06_prop_media_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co06
use "D:\Bases\MTE\Vinc\sul2006_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2006_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su06_prop_media_b.dta", replace
























*************************** CENTROOESTE

// Carregar o dataset mestre co07
use "D:\Bases\MTE\Vinc\centrooeste2007_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2007_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co07_prop_media_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co07
use "D:\Bases\MTE\Vinc\nordeste2007_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2007_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne07_prop_media_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co07
use "D:\Bases\MTE\Vinc\norte2007_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2007_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no07_prop_media_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co07
use "D:\Bases\MTE\Vinc\sudeste2007_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2007_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se07_prop_media_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co07
use "D:\Bases\MTE\Vinc\sul2007_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2007_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su07_prop_media_b.dta", replace






















*************************** CENTROOESTE

// Carregar o dataset mestre co08
use "D:\Bases\MTE\Vinc\centrooeste2008_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2008_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co08_prop_media_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co08
use "D:\Bases\MTE\Vinc\nordeste2008_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2008_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne08_prop_media_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co08
use "D:\Bases\MTE\Vinc\norte2008_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2008_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no08_prop_media_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co08
use "D:\Bases\MTE\Vinc\sudeste2008_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2008_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se08_prop_media_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co08
use "D:\Bases\MTE\Vinc\sul2008_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2008_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su08_prop_media_b.dta", replace



























*************************** CENTROOESTE

// Carregar o dataset mestre co09
use "D:\Bases\MTE\Vinc\centrooeste2009_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2009_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co09_prop_media_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co09
use "D:\Bases\MTE\Vinc\nordeste2009_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2009_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne09_prop_media_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co09
use "D:\Bases\MTE\Vinc\norte2009_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2009_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no09_prop_media_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co09
use "D:\Bases\MTE\Vinc\sudeste2009_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2009_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se09_prop_media_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co09
use "D:\Bases\MTE\Vinc\sul2009_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2009_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su09_prop_media_b.dta", replace

















*************************** CENTROOESTE

// Carregar o dataset mestre co10
use "D:\Bases\MTE\Vinc\centrooeste2010_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2010_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co10_prop_media_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co10
use "D:\Bases\MTE\Vinc\nordeste2010_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2010_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne10_prop_media_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co10
use "D:\Bases\MTE\Vinc\norte2010_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2010_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no10_prop_media_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co10
use "D:\Bases\MTE\Vinc\sudeste2010_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2010_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se10_prop_media_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co10
use "D:\Bases\MTE\Vinc\sul2010_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2010_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su10_prop_media_b.dta", replace

























*************************** CENTROOESTE

// Carregar o dataset mestre co11
use "D:\Bases\MTE\Vinc\centrooeste2011_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2011_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co11_prop_media_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co11
use "D:\Bases\MTE\Vinc\nordeste2011_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2011_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne11_prop_media_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co11
use "D:\Bases\MTE\Vinc\norte2011_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2011_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no11_prop_media_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co11
use "D:\Bases\MTE\Vinc\sudeste2011_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2011_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se11_prop_media_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co11
use "D:\Bases\MTE\Vinc\sul2011_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2011_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su11_prop_media_b.dta", replace




















*************************** CENTROOESTE

// Carregar o dataset mestre co12
use "D:\Bases\MTE\Vinc\centrooeste2012_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2012_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co12_prop_media_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co12
use "D:\Bases\MTE\Vinc\nordeste2012_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2012_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne12_prop_media_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co12
use "D:\Bases\MTE\Vinc\norte2012_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2012_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no12_prop_media_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co12
use "D:\Bases\MTE\Vinc\sudeste2012_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2012_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se12_prop_media_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co12
use "D:\Bases\MTE\Vinc\sul2012_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2012_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su12_prop_media_b.dta", replace


























*************************** CENTROOESTE

// Carregar o dataset mestre co13
use "D:\Bases\MTE\Vinc\centrooeste2013_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2013_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co13_prop_media_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co13
use "D:\Bases\MTE\Vinc\nordeste2013_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2013_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne13_prop_media_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co13
use "D:\Bases\MTE\Vinc\norte2013_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2013_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no13_prop_media_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co13
use "D:\Bases\MTE\Vinc\sudeste2013_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2013_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se13_prop_media_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co13
use "D:\Bases\MTE\Vinc\sul2013_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2013_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su13_prop_media_b.dta", replace





















*************************** CENTROOESTE

// Carregar o dataset mestre co14
use "D:\Bases\MTE\Vinc\centrooeste2014_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2014_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co14_prop_media_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co14
use "D:\Bases\MTE\Vinc\nordeste2014_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2014_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne14_prop_media_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co14
use "D:\Bases\MTE\Vinc\norte2014_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2014_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no14_prop_media_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co14
use "D:\Bases\MTE\Vinc\sudeste2014_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2014_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se14_prop_media_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co14
use "D:\Bases\MTE\Vinc\sul2014_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2014_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su14_prop_media_b.dta", replace
























*************************** CENTROOESTE

// Carregar o dataset mestre co15
use "D:\Bases\MTE\Vinc\centrooeste2015_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2015_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co15_prop_media_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co15
use "D:\Bases\MTE\Vinc\nordeste2015_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2015_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne15_prop_media_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co15
use "D:\Bases\MTE\Vinc\norte2015_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2015_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no15_prop_media_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co15
use "D:\Bases\MTE\Vinc\sudeste2015_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2015_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se15_prop_media_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co15
use "D:\Bases\MTE\Vinc\sul2015_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2015_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su15_prop_media_b.dta", replace




























*************************** CENTROOESTE

// Carregar o dataset mestre co16
use "D:\Bases\MTE\Vinc\centrooeste2016_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2016_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co16_prop_media_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co16
use "D:\Bases\MTE\Vinc\nordeste2016_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2016_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne16_prop_media_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co16
use "D:\Bases\MTE\Vinc\norte2016_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2016_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no16_prop_media_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co16
use "D:\Bases\MTE\Vinc\sudeste2016_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2016_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se16_prop_media_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co16
use "D:\Bases\MTE\Vinc\sul2016_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2016_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su16_prop_media_b.dta", replace


























*************************** CENTROOESTE

// Carregar o dataset mestre co17
use "D:\Bases\MTE\Vinc\centrooeste2017_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2017_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co17_prop_media_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co17
use "D:\Bases\MTE\Vinc\nordeste2017_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2017_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne17_prop_media_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co17
use "D:\Bases\MTE\Vinc\norte2017_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2017_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no17_prop_media_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co17
use "D:\Bases\MTE\Vinc\sudeste2017_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2017_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se17_prop_media_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co17
use "D:\Bases\MTE\Vinc\sul2017_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2017_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su17_prop_media_b.dta", replace


























*************************** CENTROOESTE

// Carregar o dataset mestre co18
use "D:\Bases\MTE\Vinc\centrooeste2018_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2018_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co18_prop_media_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co18
use "D:\Bases\MTE\Vinc\nordeste2018_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2018_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne18_prop_media_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co18
use "D:\Bases\MTE\Vinc\norte2018_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2018_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no18_prop_media_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co18
use "D:\Bases\MTE\Vinc\sudeste2018_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sudeste2018_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\se18_prop_media_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co18
use "D:\Bases\MTE\Vinc\sul2018_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2018_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su18_prop_media_b.dta", replace


















*************************** CENTROOESTE

// Carregar o dataset mestre co19
use "D:\Bases\MTE\Vinc\centrooeste2019_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2019_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co19_prop_media_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co19
use "D:\Bases\MTE\Vinc\nordeste2019_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2019_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne19_prop_media_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co19
use "D:\Bases\MTE\Vinc\norte2019_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2019_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no19_prop_media_b.dta", replace





************************** mgesrj


// Carregar o dataset mestre co19
use "D:\Bases\MTE\Vinc\mgesrj2019_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\mgesrj2019_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)          	
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)






collapse (mean) proportion_matched, by(municipio)


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\mgesrj19_prop_media_b.dta", replace





************************** sp


// Carregar o dataset mestre co19
use "D:\Bases\MTE\Vinc\sp2019_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sp2019_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)          	
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)






collapse (mean) proportion_matched, by(municipio)


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sp19_prop_media_b.dta", replace






*********************** SUL


// Carregar o dataset mestre co19
use "D:\Bases\MTE\Vinc\sul2019_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2019_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su19_prop_media_b.dta", replace

















*************************** CENTROOESTE

// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\centrooeste2020_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2020_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co20_prop_media_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\nordeste2020_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2020_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne20_prop_media_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\norte2020_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2020_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no20_prop_media_b.dta", replace





************************** mgesrj


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\mgesrj2020_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\mgesrj2020_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)          	
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)






collapse (mean) proportion_matched, by(municipio)


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\mgesrj20_prop_media_b.dta", replace





************************** sp


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\sp2020_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sp2020_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)          	
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)






collapse (mean) proportion_matched, by(municipio)


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sp20_prop_media_b.dta", replace






*********************** SUL


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\sul2020_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2020_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su20_prop_media_b.dta", replace





















*************************** CENTROOESTE

// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\centrooeste2021_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\centrooeste2021_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\co21_prop_media_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\nordeste2021_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\nordeste2021_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\ne21_prop_media_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\norte2021_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\norte2021_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\no21_prop_media_b.dta", replace





************************** mgesrj


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\mgesrj2021_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\mgesrj2021_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)          	
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)






collapse (mean) proportion_matched, by(municipio)


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\mgesrj21_prop_media_b.dta", replace





************************** sp


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\sp2021_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sp2021_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)          	
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)






collapse (mean) proportion_matched, by(municipio)


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sp21_prop_media_b.dta", replace






*********************** SUL


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\sul2021_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\media_unique_copia.dta"

keep if (substr(clascnae95, 1, 2) >= "50" & substr(clascnae95, 1, 2) <= "74") | (substr(clascnae95, 1, 2) >= "76" & substr(clascnae95, 1, 2) <= "93") | (substr(clascnae95, 1, 2) >= "96" & substr(clascnae95, 1, 2) <= "99") // Verificar o resultado da mescl o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\sul2021_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\terciario\su21_prop_media_b.dta", replace















































































// Carregar o dataset cognitivo
*use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo.dta", clear 

// Verificar duplicatas na variável ocup2002
*duplicates report ocup2002

// Listar duplicatas, se houver
*duplicates list ocup2002

*duplicates drop ocup2002, force
// Salvar o dataset sem duplicatas
*save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique.dta", replace


*************************** CENTROOESTE

// Carregar o dataset mestre co03
use "D:\Bases\MTE\Vinc\centrooeste2003_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique.dta"



// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2003_com_matched_cognitivo.dta", replace

use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2003_com_matched_cognitivo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)

collapse (mean) proportion_matched, by(municipio)







save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co03_prop_cognitivo_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co03
use "D:\Bases\MTE\Vinc\nordeste2003_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2003_com_matched_cognitivo.dta", replace

use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2003_com_matched_cognitivo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)

collapse (mean) proportion_matched, by(municipio)







save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne03_prop_cognitivo_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co03
use "D:\Bases\MTE\Vinc\norte2003_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2003_com_matched_cognitivo.dta", replace

use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2003_com_matched_cognitivo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)

collapse (mean) proportion_matched, by(municipio)







save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no03_prop_cognitivo_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co03
use "D:\Bases\MTE\Vinc\sudeste2003_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
*save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2003_com_matched_cognitivo.dta", replace

use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2003_com_matched_cognitivo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup

save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se03_prop_cognitivo_meiodocaminho.dta", replace

use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se03_prop_cognitivo_meiodocaminho.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)

// Criar um dataset com a proporção por município
collapse (mean) proportion_matched, by(municipio)

// Salvar o novo dataset
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se03_prop_cognitivo_b.dta", replace






*********************** SUL


// Carregar o dataset mestre co03
use "D:\Bases\MTE\Vinc\sul2003_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2003_com_matched_cognitivo.dta", replace

use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2003_com_matched_cognitivo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)

collapse (mean) proportion_matched, by(municipio)







save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su03_prop_cognitivo_b.dta", replace











*************************** CENTROOESTE

// Carregar o dataset mestre co04
use "D:\Bases\MTE\Vinc\centrooeste2004_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2004_com_matched_cognitivo.dta", replace



// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co04_prop_cognitivo_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co04
use "D:\Bases\MTE\Vinc\nordeste2004_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2004_com_matched_cognitivo.dta", replace



// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne04_prop_cognitivo_b.dta", replace








************************** NORTE


// Carregar o dataset mestre co04
use "D:\Bases\MTE\Vinc\norte2004_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2004_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no04_prop_cognitivo_b.dta", replace



















************************** SUDESTE


// Carregar o dataset mestre co04
use "D:\Bases\MTE\Vinc\sudeste2004_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2004_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se04_prop_cognitivo_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co04
use "D:\Bases\MTE\Vinc\sul2004_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2004_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su04_prop_cognitivo_b.dta", replace






















*************************** CENTROOESTE

// Carregar o dataset mestre co05
use "D:\Bases\MTE\Vinc\centrooeste2005_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2005_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co05_prop_cognitivo_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co05
use "D:\Bases\MTE\Vinc\nordeste2005_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2005_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne05_prop_cognitivo_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co05
use "D:\Bases\MTE\Vinc\norte2005_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2005_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no05_prop_cognitivo_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co05
use "D:\Bases\MTE\Vinc\sudeste2005_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2005_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se05_prop_cognitivo_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co05
use "D:\Bases\MTE\Vinc\sul2005_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2005_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su05_prop_cognitivo_b.dta", replace





























*************************** CENTROOESTE

// Carregar o dataset mestre co06
use "D:\Bases\MTE\Vinc\centrooeste2006_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2006_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co06_prop_cognitivo_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co06
use "D:\Bases\MTE\Vinc\nordeste2006_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2006_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne06_prop_cognitivo_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co06
use "D:\Bases\MTE\Vinc\norte2006_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2006_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no06_prop_cognitivo_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co06
use "D:\Bases\MTE\Vinc\sudeste2006_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2006_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se06_prop_cognitivo_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co06
use "D:\Bases\MTE\Vinc\sul2006_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2006_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su06_prop_cognitivo_b.dta", replace
























*************************** CENTROOESTE

// Carregar o dataset mestre co07
use "D:\Bases\MTE\Vinc\centrooeste2007_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2007_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co07_prop_cognitivo_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co07
use "D:\Bases\MTE\Vinc\nordeste2007_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2007_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne07_prop_cognitivo_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co07
use "D:\Bases\MTE\Vinc\norte2007_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2007_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no07_prop_cognitivo_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co07
use "D:\Bases\MTE\Vinc\sudeste2007_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2007_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se07_prop_cognitivo_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co07
use "D:\Bases\MTE\Vinc\sul2007_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2007_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su07_prop_cognitivo_b.dta", replace






















*************************** CENTROOESTE

// Carregar o dataset mestre co08
use "D:\Bases\MTE\Vinc\centrooeste2008_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2008_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co08_prop_cognitivo_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co08
use "D:\Bases\MTE\Vinc\nordeste2008_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2008_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne08_prop_cognitivo_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co08
use "D:\Bases\MTE\Vinc\norte2008_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2008_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no08_prop_cognitivo_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co08
use "D:\Bases\MTE\Vinc\sudeste2008_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2008_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se08_prop_cognitivo_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co08
use "D:\Bases\MTE\Vinc\sul2008_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2008_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su08_prop_cognitivo_b.dta", replace



























*************************** CENTROOESTE

// Carregar o dataset mestre co09
use "D:\Bases\MTE\Vinc\centrooeste2009_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2009_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co09_prop_cognitivo_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co09
use "D:\Bases\MTE\Vinc\nordeste2009_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2009_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne09_prop_cognitivo_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co09
use "D:\Bases\MTE\Vinc\norte2009_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2009_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no09_prop_cognitivo_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co09
use "D:\Bases\MTE\Vinc\sudeste2009_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2009_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se09_prop_cognitivo_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co09
use "D:\Bases\MTE\Vinc\sul2009_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2009_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su09_prop_cognitivo_b.dta", replace

















*************************** CENTROOESTE

// Carregar o dataset mestre co10
use "D:\Bases\MTE\Vinc\centrooeste2010_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2010_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co10_prop_cognitivo_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co10
use "D:\Bases\MTE\Vinc\nordeste2010_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2010_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne10_prop_cognitivo_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co10
use "D:\Bases\MTE\Vinc\norte2010_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2010_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no10_prop_cognitivo_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co10
use "D:\Bases\MTE\Vinc\sudeste2010_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2010_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se10_prop_cognitivo_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co10
use "D:\Bases\MTE\Vinc\sul2010_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2010_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su10_prop_cognitivo_b.dta", replace

























*************************** CENTROOESTE

// Carregar o dataset mestre co11
use "D:\Bases\MTE\Vinc\centrooeste2011_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2011_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co11_prop_cognitivo_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co11
use "D:\Bases\MTE\Vinc\nordeste2011_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2011_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne11_prop_cognitivo_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co11
use "D:\Bases\MTE\Vinc\norte2011_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2011_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no11_prop_cognitivo_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co11
use "D:\Bases\MTE\Vinc\sudeste2011_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2011_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se11_prop_cognitivo_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co11
use "D:\Bases\MTE\Vinc\sul2011_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2011_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su11_prop_cognitivo_b.dta", replace




















*************************** CENTROOESTE

// Carregar o dataset mestre co12
use "D:\Bases\MTE\Vinc\centrooeste2012_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2012_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co12_prop_cognitivo_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co12
use "D:\Bases\MTE\Vinc\nordeste2012_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2012_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne12_prop_cognitivo_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co12
use "D:\Bases\MTE\Vinc\norte2012_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2012_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no12_prop_cognitivo_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co12
use "D:\Bases\MTE\Vinc\sudeste2012_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2012_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se12_prop_cognitivo_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co12
use "D:\Bases\MTE\Vinc\sul2012_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2012_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su12_prop_cognitivo_b.dta", replace


























*************************** CENTROOESTE

// Carregar o dataset mestre co13
use "D:\Bases\MTE\Vinc\centrooeste2013_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2013_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co13_prop_cognitivo_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co13
use "D:\Bases\MTE\Vinc\nordeste2013_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2013_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne13_prop_cognitivo_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co13
use "D:\Bases\MTE\Vinc\norte2013_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2013_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no13_prop_cognitivo_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co13
use "D:\Bases\MTE\Vinc\sudeste2013_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2013_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se13_prop_cognitivo_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co13
use "D:\Bases\MTE\Vinc\sul2013_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2013_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su13_prop_cognitivo_b.dta", replace





















*************************** CENTROOESTE

// Carregar o dataset mestre co14
use "D:\Bases\MTE\Vinc\centrooeste2014_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2014_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co14_prop_cognitivo_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co14
use "D:\Bases\MTE\Vinc\nordeste2014_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2014_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne14_prop_cognitivo_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co14
use "D:\Bases\MTE\Vinc\norte2014_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2014_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no14_prop_cognitivo_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co14
use "D:\Bases\MTE\Vinc\sudeste2014_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2014_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se14_prop_cognitivo_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co14
use "D:\Bases\MTE\Vinc\sul2014_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2014_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su14_prop_cognitivo_b.dta", replace
























*************************** CENTROOESTE

// Carregar o dataset mestre co15
use "D:\Bases\MTE\Vinc\centrooeste2015_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2015_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co15_prop_cognitivo_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co15
use "D:\Bases\MTE\Vinc\nordeste2015_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2015_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne15_prop_cognitivo_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co15
use "D:\Bases\MTE\Vinc\norte2015_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2015_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no15_prop_cognitivo_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co15
use "D:\Bases\MTE\Vinc\sudeste2015_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
*save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2015_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se15_prop_cognitivo_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co15
use "D:\Bases\MTE\Vinc\sul2015_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2015_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su15_prop_cognitivo_b.dta", replace




























*************************** CENTROOESTE

// Carregar o dataset mestre co16
use "D:\Bases\MTE\Vinc\centrooeste2016_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2016_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co16_prop_cognitivo_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co16
use "D:\Bases\MTE\Vinc\nordeste2016_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2016_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne16_prop_cognitivo_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co16
use "D:\Bases\MTE\Vinc\norte2016_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2016_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no16_prop_cognitivo_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co16
use "D:\Bases\MTE\Vinc\sudeste2016_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2016_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se16_prop_cognitivo_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co16
use "D:\Bases\MTE\Vinc\sul2016_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2016_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su16_prop_cognitivo_b.dta", replace


























*************************** CENTROOESTE

// Carregar o dataset mestre co17
use "D:\Bases\MTE\Vinc\centrooeste2017_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2017_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co17_prop_cognitivo_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co17
use "D:\Bases\MTE\Vinc\nordeste2017_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2017_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne17_prop_cognitivo_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co17
use "D:\Bases\MTE\Vinc\norte2017_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2017_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no17_prop_cognitivo_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co17
use "D:\Bases\MTE\Vinc\sudeste2017_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2017_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se17_prop_cognitivo_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co17
use "D:\Bases\MTE\Vinc\sul2017_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2017_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su17_prop_cognitivo_b.dta", replace


























*************************** CENTROOESTE

// Carregar o dataset mestre co18
use "D:\Bases\MTE\Vinc\centrooeste2018_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2018_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co18_prop_cognitivo_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co18
use "D:\Bases\MTE\Vinc\nordeste2018_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2018_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne18_prop_cognitivo_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co18
use "D:\Bases\MTE\Vinc\norte2018_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2018_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no18_prop_cognitivo_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co18
use "D:\Bases\MTE\Vinc\sudeste2018_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2018_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se18_prop_cognitivo_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co18
use "D:\Bases\MTE\Vinc\sul2018_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2018_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su18_prop_cognitivo_b.dta", replace


















*************************** CENTROOESTE

// Carregar o dataset mestre co19
use "D:\Bases\MTE\Vinc\centrooeste2019_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2019_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co19_prop_cognitivo_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co19
use "D:\Bases\MTE\Vinc\nordeste2019_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2019_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne19_prop_cognitivo_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co19
use "D:\Bases\MTE\Vinc\norte2019_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2019_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no19_prop_cognitivo_b.dta", replace





************************** mgesrj


// Carregar o dataset mestre co19
use "D:\Bases\MTE\Vinc\mgesrj2019_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\mgesrj2019_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)          	
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\mgesrj19_prop_cognitivo_b.dta", replace





************************** sp


// Carregar o dataset mestre co19
use "D:\Bases\MTE\Vinc\sp2019_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sp2019_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)          	
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sp19_prop_cognitivo_b.dta", replace






*********************** SUL


// Carregar o dataset mestre co19
use "D:\Bases\MTE\Vinc\sul2019_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2019_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su19_prop_cognitivo_b.dta", replace

















*************************** CENTROOESTE

// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\centrooeste2020_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2020_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co20_prop_cognitivo_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\nordeste2020_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2020_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne20_prop_cognitivo_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\norte2020_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2020_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no20_prop_cognitivo_b.dta", replace





************************** mgesrj


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\mgesrj2020_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\mgesrj2020_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)          	
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\mgesrj20_prop_cognitivo_b.dta", replace





************************** sp


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\sp2020_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sp2020_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)          	
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sp20_prop_cognitivo_b.dta", replace






*********************** SUL


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\sul2020_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2020_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su20_prop_cognitivo_b.dta", replace





















*************************** CENTROOESTE

// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\centrooeste2021_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2021_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co21_prop_cognitivo_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\nordeste2021_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2021_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne21_prop_cognitivo_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\norte2021_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2021_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no21_prop_cognitivo_b.dta", replace





************************** mgesrj


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\mgesrj2021_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\mgesrj2021_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)          	
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\mgesrj21_prop_cognitivo_b.dta", replace





************************** sp


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\sp2021_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sp2021_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)          	
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sp21_prop_cognitivo_b.dta", replace






*********************** SUL


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\sul2021_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset cognitivo (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\cognitivo_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2021_com_matched_cognitivo.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)


collapse (mean) proportion_matched, by(municipio)






save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su21_prop_cognitivo_b.dta", replace



































































// Carregar o dataset social
use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Verificar duplicatas na variável ocup2002
*duplicates report ocup2002

// Listar duplicatas, se houver
*duplicates list ocup2002

duplicates drop ocup2002, force
// Salvar o dataset sem duplicatas
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique.dta", replace


***********************
  // Carregar o dataset social copia
use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social - Copia.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Verificar duplicatas na variável ocup2002
*duplicates report ocup2002

// Listar duplicatas, se houver
*duplicates list ocup2002

duplicates drop ocup2002, force
tostring ocup2002, replace
// Salvar o dataset sem duplicatas
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique_copia.dta", replace





*************************** CENTROOESTE

// Carregar o dataset mestre co03
use "D:\Bases\MTE\Vinc\centrooeste2003_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2003_com_matched_social.dta", replace



// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co03_prop_social_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co03
use "D:\Bases\MTE\Vinc\nordeste2003_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2003_com_matched_social.dta", replace



// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne03_prop_social_b.dta", replace








************************** NORTE


// Carregar o dataset mestre co03
use "D:\Bases\MTE\Vinc\norte2003_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2003_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no03_prop_social_b.dta", replace



















************************** SUDESTE


// Carregar o dataset mestre co03
use "D:\Bases\MTE\Vinc\sudeste2003_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2003_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se03_prop_social_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co03
use "D:\Bases\MTE\Vinc\sul2003_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2003_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su03_prop_social_b.dta", replace














*************************** CENTROOESTE

// Carregar o dataset mestre co04
use "D:\Bases\MTE\Vinc\centrooeste2004_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2004_com_matched_social.dta", replace



// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co04_prop_social_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co04
use "D:\Bases\MTE\Vinc\nordeste2004_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2004_com_matched_social.dta", replace



// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne04_prop_social_b.dta", replace








************************** NORTE


// Carregar o dataset mestre co04
use "D:\Bases\MTE\Vinc\norte2004_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2004_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no04_prop_social_b.dta", replace



















************************** SUDESTE


// Carregar o dataset mestre co04
use "D:\Bases\MTE\Vinc\sudeste2004_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2004_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se04_prop_social_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co04
use "D:\Bases\MTE\Vinc\sul2004_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2004_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su04_prop_social_b.dta", replace






















*************************** CENTROOESTE

// Carregar o dataset mestre co05
use "D:\Bases\MTE\Vinc\centrooeste2005_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2005_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co05_prop_social_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co05
use "D:\Bases\MTE\Vinc\nordeste2005_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2005_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne05_prop_social_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co05
use "D:\Bases\MTE\Vinc\norte2005_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2005_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no05_prop_social_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co05
use "D:\Bases\MTE\Vinc\sudeste2005_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2005_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se05_prop_social_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co05
use "D:\Bases\MTE\Vinc\sul2005_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2005_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su05_prop_social_b.dta", replace





























*************************** CENTROOESTE

// Carregar o dataset mestre co06
use "D:\Bases\MTE\Vinc\centrooeste2006_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2006_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co06_prop_social_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co06
use "D:\Bases\MTE\Vinc\nordeste2006_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2006_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne06_prop_social_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co06
use "D:\Bases\MTE\Vinc\norte2006_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2006_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no06_prop_social_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co06
use "D:\Bases\MTE\Vinc\sudeste2006_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2006_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se06_prop_social_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co06
use "D:\Bases\MTE\Vinc\sul2006_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2006_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su06_prop_social_b.dta", replace
























*************************** CENTROOESTE

// Carregar o dataset mestre co07
use "D:\Bases\MTE\Vinc\centrooeste2007_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2007_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co07_prop_social_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co07
use "D:\Bases\MTE\Vinc\nordeste2007_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2007_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne07_prop_social_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co07
use "D:\Bases\MTE\Vinc\norte2007_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2007_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no07_prop_social_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co07
use "D:\Bases\MTE\Vinc\sudeste2007_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2007_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se07_prop_social_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co07
use "D:\Bases\MTE\Vinc\sul2007_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2007_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su07_prop_social_b.dta", replace






















*************************** CENTROOESTE

// Carregar o dataset mestre co08
use "D:\Bases\MTE\Vinc\centrooeste2008_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2008_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co08_prop_social_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co08
use "D:\Bases\MTE\Vinc\nordeste2008_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2008_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne08_prop_social_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co08
use "D:\Bases\MTE\Vinc\norte2008_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2008_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no08_prop_social_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co08
use "D:\Bases\MTE\Vinc\sudeste2008_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2008_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se08_prop_social_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co08
use "D:\Bases\MTE\Vinc\sul2008_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2008_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su08_prop_social_b.dta", replace



























*************************** CENTROOESTE

// Carregar o dataset mestre co09
use "D:\Bases\MTE\Vinc\centrooeste2009_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2009_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co09_prop_social_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co09
use "D:\Bases\MTE\Vinc\nordeste2009_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2009_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne09_prop_social_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co09
use "D:\Bases\MTE\Vinc\norte2009_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2009_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no09_prop_social_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co09
use "D:\Bases\MTE\Vinc\sudeste2009_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2009_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se09_prop_social_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co09
use "D:\Bases\MTE\Vinc\sul2009_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2009_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su09_prop_social_b.dta", replace

















*************************** CENTROOESTE

// Carregar o dataset mestre co10
use "D:\Bases\MTE\Vinc\centrooeste2010_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2010_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co10_prop_social_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co10
use "D:\Bases\MTE\Vinc\nordeste2010_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2010_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne10_prop_social_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co10
use "D:\Bases\MTE\Vinc\norte2010_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2010_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no10_prop_social_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co10
use "D:\Bases\MTE\Vinc\sudeste2010_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2010_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se10_prop_social_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co10
use "D:\Bases\MTE\Vinc\sul2010_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2010_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su10_prop_social_b.dta", replace

























*************************** CENTROOESTE

// Carregar o dataset mestre co11
use "D:\Bases\MTE\Vinc\centrooeste2011_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2011_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) form at(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co11_prop_social_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co11
use "D:\Bases\MTE\Vinc\nordeste2011_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2011_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne11_prop_social_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co11
use "D:\Bases\MTE\Vinc\norte2011_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2011_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no11_prop_social_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co11
use "D:\Bases\MTE\Vinc\sudeste2011_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2011_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se11_prop_social_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co11
use "D:\Bases\MTE\Vinc\sul2011_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2011_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su11_prop_social_b.dta", replace




















*************************** CENTROOESTE

// Carregar o dataset mestre co12
use "D:\Bases\MTE\Vinc\centrooeste2012_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2012_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co12_prop_social_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co12
use "D:\Bases\MTE\Vinc\nordeste2012_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2012_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne12_prop_social_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co12
use "D:\Bases\MTE\Vinc\norte2012_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2012_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no12_prop_social_b.dta", replace








************************** SUDESTE


// Carregar o dataset mestre co12
use "D:\Bases\MTE\Vinc\sudeste2012_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2012_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se12_prop_social_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co12
use "D:\Bases\MTE\Vinc\sul2012_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2012_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su12_prop_social_b.dta", replace


























*************************** CENTROOESTE

// Carregar o dataset mestre co13
use "D:\Bases\MTE\Vinc\centrooeste2013_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2013_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co13_prop_social_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co13
use "D:\Bases\MTE\Vinc\nordeste2013_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2013_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne13_prop_social_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co13
use "D:\Bases\MTE\Vinc\norte2013_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2013_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no13_prop_social_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co13
use "D:\Bases\MTE\Vinc\sudeste2013_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2013_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se13_prop_social_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co13
use "D:\Bases\MTE\Vinc\sul2013_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2013_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su13_prop_social_b.dta", replace





















*************************** CENTROOESTE

// Carregar o dataset mestre co14
use "D:\Bases\MTE\Vinc\centrooeste2014_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2014_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co14_prop_social_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co14
use "D:\Bases\MTE\Vinc\nordeste2014_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2014_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne14_prop_social_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co14
use "D:\Bases\MTE\Vinc\norte2014_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2014_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no14_prop_social_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co14
use "D:\Bases\MTE\Vinc\sudeste2014_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2014_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se14_prop_social_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co14
use "D:\Bases\MTE\Vinc\sul2014_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2014_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su14_prop_social_b.dta", replace
























*************************** CENTROOESTE

// Carregar o dataset mestre co15
use "D:\Bases\MTE\Vinc\centrooeste2015_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2015_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co15_prop_social_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co15
use "D:\Bases\MTE\Vinc\nordeste2015_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2015_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne15_prop_social_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co15
use "D:\Bases\MTE\Vinc\norte2015_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2015_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no15_prop_social_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co15
use "D:\Bases\MTE\Vinc\sudeste2015_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2015_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se15_prop_social_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co15
use "D:\Bases\MTE\Vinc\sul2015_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2015_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su15_prop_social_b.dta", replace




























*************************** CENTROOESTE

// Carregar o dataset mestre co16
use "D:\Bases\MTE\Vinc\centrooeste2016_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2016_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co16_prop_social_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co16
use "D:\Bases\MTE\Vinc\nordeste2016_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2016_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne16_prop_social_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co16
use "D:\Bases\MTE\Vinc\norte2016_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2016_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no16_prop_social_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co16
use "D:\Bases\MTE\Vinc\sudeste2016_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2016_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se16_prop_social_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co16
use "D:\Bases\MTE\Vinc\sul2016_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2016_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su16_prop_social_b.dta", replace


























*************************** CENTROOESTE

// Carregar o dataset mestre co17
use "D:\Bases\MTE\Vinc\centrooeste2017_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2017_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co17_prop_social_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co17
use "D:\Bases\MTE\Vinc\nordeste2017_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2017_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne17_prop_social_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co17
use "D:\Bases\MTE\Vinc\norte2017_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2017_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no17_prop_social_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co17
use "D:\Bases\MTE\Vinc\sudeste2017_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2017_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se17_prop_social_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co17
use "D:\Bases\MTE\Vinc\sul2017_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2017_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su17_prop_social_b.dta", replace


























*************************** CENTROOESTE

// Carregar o dataset mestre co18
use "D:\Bases\MTE\Vinc\centrooeste2018_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2018_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co18_prop_social_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co18
use "D:\Bases\MTE\Vinc\nordeste2018_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2018_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne18_prop_social_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co18
use "D:\Bases\MTE\Vinc\norte2018_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2018_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no18_prop_social_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co18
use "D:\Bases\MTE\Vinc\sudeste2018_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2018_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se18_prop_social_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co18
use "D:\Bases\MTE\Vinc\sul2018_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2018_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su18_prop_social_b.dta", replace


















*************************** CENTROOESTE

// Carregar o dataset mestre co19
use "D:\Bases\MTE\Vinc\centrooeste2019_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2019_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co19_prop_social_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co19
use "D:\Bases\MTE\Vinc\nordeste2019_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2019_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne19_prop_social_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co19
use "D:\Bases\MTE\Vinc\norte2019_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2019_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no19_prop_social_b.dta", replace





************************** mgesrj


// Carregar o dataset mestre co19
use "D:\Bases\MTE\Vinc\mgesrj2019_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\mgesrj2019_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)          	
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)






collapse (mean) proportion_matched, by(municipio)


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\mgesrj19_prop_social_b.dta", replace





************************** sp


// Carregar o dataset mestre co19
use "D:\Bases\MTE\Vinc\sp2019_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sp2019_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)          	
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)






collapse (mean) proportion_matched, by(municipio)


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sp19_prop_social_b.dta", replace






*********************** SUL


// Carregar o dataset mestre co19
use "D:\Bases\MTE\Vinc\sul2019_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2019_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su19_prop_social_b.dta", replace

















*************************** CENTROOESTE

// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\centrooeste2020_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2020_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co20_prop_social_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\nordeste2020_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2020_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne20_prop_social_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\norte2020_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2020_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no20_prop_social_b.dta", replace





************************** mgesrj


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\mgesrj2020_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\mgesrj2020_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)          	
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)






collapse (mean) proportion_matched, by(municipio)


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\mgesrj20_prop_social_b.dta", replace





************************** sp


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\sp2020_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sp2020_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)          	
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)






collapse (mean) proportion_matched, by(municipio)


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sp20_prop_social_b.dta", replace






*********************** SUL


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\sul2020_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2020_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su20_prop_social_b.dta", replace





















*************************** CENTROOESTE

// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\centrooeste2021_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2021_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co21_prop_social_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\nordeste2021_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2021_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne21_prop_social_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\norte2021_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2021_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no21_prop_social_b.dta", replace





************************** mgesrj


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\mgesrj2021_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\mgesrj2021_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)          	
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)






collapse (mean) proportion_matched, by(municipio)


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\mgesrj21_prop_social_b.dta", replace





************************** sp


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\sp2021_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sp2021_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)          	
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)






collapse (mean) proportion_matched, by(municipio)


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sp21_prop_social_b.dta", replace






*********************** SUL


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\sul2021_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset social (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\social_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2021_com_matched_social.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su21_prop_social_b.dta", replace
























// Carregar o dataset motor
use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Verificar duplicatas na variável ocup2002
*duplicates report ocup2002

// Listar duplicatas, se houver
*duplicates list ocup2002

duplicates drop ocup2002, force
// Salvar o dataset sem duplicatas
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique.dta", replace


***********************
  // Carregar o dataset motor copia
use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor - Copia.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Verificar duplicatas na variável ocup2002
*duplicates report ocup2002

// Listar duplicatas, se houver
*duplicates list ocup2002

duplicates drop ocup2002, force
tostring ocup2002, replace
// Salvar o dataset sem duplicatas
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique_copia.dta", replace





*************************** CENTROOESTE

// Carregar o dataset mestre co03
use "D:\Bases\MTE\Vinc\centrooeste2003_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2003_com_matched_motor.dta", replace



// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co03_prop_motor_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co03
use "D:\Bases\MTE\Vinc\nordeste2003_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2003_com_matched_motor.dta", replace



// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne03_prop_motor_b.dta", replace








************************** NORTE


// Carregar o dataset mestre co03
use "D:\Bases\MTE\Vinc\norte2003_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2003_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no03_prop_motor_b.dta", replace



















************************** SUDESTE


// Carregar o dataset mestre co03
use "D:\Bases\MTE\Vinc\sudeste2003_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2003_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se03_prop_motor_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co03
use "D:\Bases\MTE\Vinc\sul2003_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2003_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su03_prop_motor_b.dta", replace














*************************** CENTROOESTE

// Carregar o dataset mestre co04
use "D:\Bases\MTE\Vinc\centrooeste2004_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2004_com_matched_motor.dta", replace



// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co04_prop_motor_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co04
use "D:\Bases\MTE\Vinc\nordeste2004_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2004_com_matched_motor.dta", replace



// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne04_prop_motor_b.dta", replace








************************** NORTE


// Carregar o dataset mestre co04
use "D:\Bases\MTE\Vinc\norte2004_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2004_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no04_prop_motor_b.dta", replace



















************************** SUDESTE


// Carregar o dataset mestre co04
use "D:\Bases\MTE\Vinc\sudeste2004_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2004_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se04_prop_motor_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co04
use "D:\Bases\MTE\Vinc\sul2004_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2004_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su04_prop_motor_b.dta", replace






















*************************** CENTROOESTE

// Carregar o dataset mestre co05
use "D:\Bases\MTE\Vinc\centrooeste2005_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2005_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co05_prop_motor_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co05
use "D:\Bases\MTE\Vinc\nordeste2005_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2005_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne05_prop_motor_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co05
use "D:\Bases\MTE\Vinc\norte2005_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2005_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no05_prop_motor_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co05
use "D:\Bases\MTE\Vinc\sudeste2005_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2005_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se05_prop_motor_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co05
use "D:\Bases\MTE\Vinc\sul2005_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2005_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su05_prop_motor_b.dta", replace





























*************************** CENTROOESTE

// Carregar o dataset mestre co06
use "D:\Bases\MTE\Vinc\centrooeste2006_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2006_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co06_prop_motor_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co06
use "D:\Bases\MTE\Vinc\nordeste2006_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2006_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne06_prop_motor_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co06
use "D:\Bases\MTE\Vinc\norte2006_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2006_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no06_prop_motor_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co06
use "D:\Bases\MTE\Vinc\sudeste2006_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2006_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se06_prop_motor_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co06
use "D:\Bases\MTE\Vinc\sul2006_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2006_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su06_prop_motor_b.dta", replace
























*************************** CENTROOESTE

// Carregar o dataset mestre co07
use "D:\Bases\MTE\Vinc\centrooeste2007_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2007_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co07_prop_motor_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co07
use "D:\Bases\MTE\Vinc\nordeste2007_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2007_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne07_prop_motor_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co07
use "D:\Bases\MTE\Vinc\norte2007_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2007_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no07_prop_motor_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co07
use "D:\Bases\MTE\Vinc\sudeste2007_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2007_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se07_prop_motor_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co07
use "D:\Bases\MTE\Vinc\sul2007_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2007_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su07_prop_motor_b.dta", replace






















*************************** CENTROOESTE

// Carregar o dataset mestre co08
use "D:\Bases\MTE\Vinc\centrooeste2008_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2008_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co08_prop_motor_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co08
use "D:\Bases\MTE\Vinc\nordeste2008_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2008_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne08_prop_motor_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co08
use "D:\Bases\MTE\Vinc\norte2008_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2008_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no08_prop_motor_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co08
use "D:\Bases\MTE\Vinc\sudeste2008_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2008_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se08_prop_motor_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co08
use "D:\Bases\MTE\Vinc\sul2008_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2008_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su08_prop_motor_b.dta", replace



























*************************** CENTROOESTE

// Carregar o dataset mestre co09
use "D:\Bases\MTE\Vinc\centrooeste2009_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2009_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co09_prop_motor_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co09
use "D:\Bases\MTE\Vinc\nordeste2009_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2009_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne09_prop_motor_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co09
use "D:\Bases\MTE\Vinc\norte2009_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2009_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no09_prop_motor_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co09
use "D:\Bases\MTE\Vinc\sudeste2009_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2009_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se09_prop_motor_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co09
use "D:\Bases\MTE\Vinc\sul2009_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2009_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su09_prop_motor_b.dta", replace

















*************************** CENTROOESTE

// Carregar o dataset mestre co10
use "D:\Bases\MTE\Vinc\centrooeste2010_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2010_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co10_prop_motor_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co10
use "D:\Bases\MTE\Vinc\nordeste2010_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2010_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne10_prop_motor_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co10
use "D:\Bases\MTE\Vinc\norte2010_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2010_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no10_prop_motor_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co10
use "D:\Bases\MTE\Vinc\sudeste2010_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2010_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se10_prop_motor_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co10
use "D:\Bases\MTE\Vinc\sul2010_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2010_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su10_prop_motor_b.dta", replace

























*************************** CENTROOESTE

// Carregar o dataset mestre co11
use "D:\Bases\MTE\Vinc\centrooeste2011_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2011_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co11_prop_motor_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co11
use "D:\Bases\MTE\Vinc\nordeste2011_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2011_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne11_prop_motor_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co11
use "D:\Bases\MTE\Vinc\norte2011_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2011_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no11_prop_motor_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co11
use "D:\Bases\MTE\Vinc\sudeste2011_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2011_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se11_prop_motor_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co11
use "D:\Bases\MTE\Vinc\sul2011_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2011_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su11_prop_motor_b.dta", replace




















*************************** CENTROOESTE

// Carregar o dataset mestre co12
use "D:\Bases\MTE\Vinc\centrooeste2012_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2012_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co12_prop_motor_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co12
use "D:\Bases\MTE\Vinc\nordeste2012_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2012_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne12_prop_motor_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co12
use "D:\Bases\MTE\Vinc\norte2012_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2012_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no12_prop_motor_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co12
use "D:\Bases\MTE\Vinc\sudeste2012_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2012_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se12_prop_motor_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co12
use "D:\Bases\MTE\Vinc\sul2012_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2012_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su12_prop_motor_b.dta", replace


























*************************** CENTROOESTE

// Carregar o dataset mestre co13
use "D:\Bases\MTE\Vinc\centrooeste2013_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2013_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co13_prop_motor_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co13
use "D:\Bases\MTE\Vinc\nordeste2013_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2013_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne13_prop_motor_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co13
use "D:\Bases\MTE\Vinc\norte2013_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2013_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no13_prop_motor_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co13
use "D:\Bases\MTE\Vinc\sudeste2013_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2013_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se13_prop_motor_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co13
use "D:\Bases\MTE\Vinc\sul2013_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2013_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su13_prop_motor_b.dta", replace





















*************************** CENTROOESTE

// Carregar o dataset mestre co14
use "D:\Bases\MTE\Vinc\centrooeste2014_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2014_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co14_prop_motor_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co14
use "D:\Bases\MTE\Vinc\nordeste2014_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2014_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne14_prop_motor_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co14
use "D:\Bases\MTE\Vinc\norte2014_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2014_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no14_prop_motor_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co14
use "D:\Bases\MTE\Vinc\sudeste2014_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2014_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se14_prop_motor_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co14
use "D:\Bases\MTE\Vinc\sul2014_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2014_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su14_prop_motor_b.dta", replace
























*************************** CENTROOESTE

// Carregar o dataset mestre co15
use "D:\Bases\MTE\Vinc\centrooeste2015_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2015_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co15_prop_motor_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co15
use "D:\Bases\MTE\Vinc\nordeste2015_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2015_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne15_prop_motor_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co15
use "D:\Bases\MTE\Vinc\norte2015_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2015_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no15_prop_motor_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co15
use "D:\Bases\MTE\Vinc\sudeste2015_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2015_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se15_prop_motor_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co15
use "D:\Bases\MTE\Vinc\sul2015_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2015_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su15_prop_motor_b.dta", replace




























*************************** CENTROOESTE

// Carregar o dataset mestre co16
use "D:\Bases\MTE\Vinc\centrooeste2016_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2016_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co16_prop_motor_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co16
use "D:\Bases\MTE\Vinc\nordeste2016_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2016_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne16_prop_motor_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co16
use "D:\Bases\MTE\Vinc\norte2016_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2016_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no16_prop_motor_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co16
use "D:\Bases\MTE\Vinc\sudeste2016_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2016_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se16_prop_motor_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co16
use "D:\Bases\MTE\Vinc\sul2016_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2016_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su16_prop_motor_b.dta", replace


























*************************** CENTROOESTE

// Carregar o dataset mestre co17
use "D:\Bases\MTE\Vinc\centrooeste2017_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2017_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co17_prop_motor_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co17
use "D:\Bases\MTE\Vinc\nordeste2017_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2017_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne17_prop_motor_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co17
use "D:\Bases\MTE\Vinc\norte2017_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2017_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no17_prop_motor_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co17
use "D:\Bases\MTE\Vinc\sudeste2017_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2017_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se17_prop_motor_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co17
use "D:\Bases\MTE\Vinc\sul2017_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2017_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su17_prop_motor_b.dta", replace


























*************************** CENTROOESTE

// Carregar o dataset mestre co18
use "D:\Bases\MTE\Vinc\centrooeste2018_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2018_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co18_prop_motor_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co18
use "D:\Bases\MTE\Vinc\nordeste2018_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2018_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne18_prop_motor_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co18
use "D:\Bases\MTE\Vinc\norte2018_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2018_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no18_prop_motor_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co18
use "D:\Bases\MTE\Vinc\sudeste2018_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2018_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se18_prop_motor_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co18
use "D:\Bases\MTE\Vinc\sul2018_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2018_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su18_prop_motor_b.dta", replace


















*************************** CENTROOESTE

// Carregar o dataset mestre co19
use "D:\Bases\MTE\Vinc\centrooeste2019_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2019_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co19_prop_motor_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co19
use "D:\Bases\MTE\Vinc\nordeste2019_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2019_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne19_prop_motor_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co19
use "D:\Bases\MTE\Vinc\norte2019_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2019_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no19_prop_motor_b.dta", replace





************************** mgesrj


// Carregar o dataset mestre co19
use "D:\Bases\MTE\Vinc\mgesrj2019_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\mgesrj2019_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)          	
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)






collapse (mean) proportion_matched, by(municipio)


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\mgesrj19_prop_motor_b.dta", replace





************************** sp


// Carregar o dataset mestre co19
use "D:\Bases\MTE\Vinc\sp2019_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sp2019_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)          	
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)






collapse (mean) proportion_matched, by(municipio)


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sp19_prop_motor_b.dta", replace






*********************** SUL


// Carregar o dataset mestre co19
use "D:\Bases\MTE\Vinc\sul2019_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2019_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su19_prop_motor_b.dta", replace

















*************************** CENTROOESTE

// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\centrooeste2020_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2020_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co20_prop_motor_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\nordeste2020_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2020_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne20_prop_motor_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\norte2020_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2020_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no20_prop_motor_b.dta", replace





************************** mgesrj


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\mgesrj2020_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\mgesrj2020_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)          	
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)






collapse (mean) proportion_matched, by(municipio)


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\mgesrj20_prop_motor_b.dta", replace





************************** sp


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\sp2020_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sp2020_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)          	
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)






collapse (mean) proportion_matched, by(municipio)


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sp20_prop_motor_b.dta", replace






*********************** SUL


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\sul2020_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2020_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su20_prop_motor_b.dta", replace





















*************************** CENTROOESTE

// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\centrooeste2021_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2021_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co21_prop_motor_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\nordeste2021_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2021_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne21_prop_motor_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\norte2021_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2021_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no21_prop_motor_b.dta", replace





************************** mgesrj


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\mgesrj2021_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\mgesrj2021_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)          	
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)






collapse (mean) proportion_matched, by(municipio)


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\mgesrj21_prop_motor_b.dta", replace





************************** sp


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\sp2021_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sp2021_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)          	
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)






collapse (mean) proportion_matched, by(municipio)


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sp21_prop_motor_b.dta", replace






*********************** SUL


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\sul2021_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset motor (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\motor_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2021_com_matched_motor.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su21_prop_motor_b.dta", replace



































// Carregar o dataset media
use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Verificar duplicatas na variável ocup2002
*duplicates report ocup2002

// Listar duplicatas, se houver
*duplicates list ocup2002

duplicates drop ocup2002, force
// Salvar o dataset sem duplicatas
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique.dta", replace


***********************
  // Carregar o dataset media copia
use "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media - Copia.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Verificar duplicatas na variável ocup2002
*duplicates report ocup2002

// Listar duplicatas, se houver
*duplicates list ocup2002

duplicates drop ocup2002, force
tostring ocup2002, replace
// Salvar o dataset sem duplicatas
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique_copia.dta", replace





*************************** CENTROOESTE

// Carregar o dataset mestre co03
use "D:\Bases\MTE\Vinc\centrooeste2003_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2003_com_matched_media.dta", replace



// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co03_prop_media_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co03
use "D:\Bases\MTE\Vinc\nordeste2003_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2003_com_matched_media.dta", replace



// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne03_prop_media_b.dta", replace








************************** NORTE


// Carregar o dataset mestre co03
use "D:\Bases\MTE\Vinc\norte2003_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2003_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no03_prop_media_b.dta", replace



















************************** SUDESTE


// Carregar o dataset mestre co03
use "D:\Bases\MTE\Vinc\sudeste2003_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2003_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se03_prop_media_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co03
use "D:\Bases\MTE\Vinc\sul2003_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2003_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su03_prop_media_b.dta", replace














*************************** CENTROOESTE

// Carregar o dataset mestre co04
use "D:\Bases\MTE\Vinc\centrooeste2004_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2004_com_matched_media.dta", replace



// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co04_prop_media_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co04
use "D:\Bases\MTE\Vinc\nordeste2004_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2004_com_matched_media.dta", replace



// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne04_prop_media_b.dta", replace








************************** NORTE


// Carregar o dataset mestre co04
use "D:\Bases\MTE\Vinc\norte2004_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2004_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no04_prop_media_b.dta", replace



















************************** SUDESTE


// Carregar o dataset mestre co04
use "D:\Bases\MTE\Vinc\sudeste2004_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2004_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se04_prop_media_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co04
use "D:\Bases\MTE\Vinc\sul2004_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2004_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su04_prop_media_b.dta", replace






















*************************** CENTROOESTE

// Carregar o dataset mestre co05
use "D:\Bases\MTE\Vinc\centrooeste2005_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2005_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co05_prop_media_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co05
use "D:\Bases\MTE\Vinc\nordeste2005_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2005_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne05_prop_media_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co05
use "D:\Bases\MTE\Vinc\norte2005_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2005_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no05_prop_media_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co05
use "D:\Bases\MTE\Vinc\sudeste2005_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2005_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se05_prop_media_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co05
use "D:\Bases\MTE\Vinc\sul2005_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2005_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su05_prop_media_b.dta", replace





























*************************** CENTROOESTE

// Carregar o dataset mestre co06
use "D:\Bases\MTE\Vinc\centrooeste2006_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2006_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co06_prop_media_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co06
use "D:\Bases\MTE\Vinc\nordeste2006_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2006_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne06_prop_media_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co06
use "D:\Bases\MTE\Vinc\norte2006_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2006_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no06_prop_media_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co06
use "D:\Bases\MTE\Vinc\sudeste2006_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2006_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se06_prop_media_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co06
use "D:\Bases\MTE\Vinc\sul2006_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2006_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su06_prop_media_b.dta", replace
























*************************** CENTROOESTE

// Carregar o dataset mestre co07
use "D:\Bases\MTE\Vinc\centrooeste2007_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2007_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co07_prop_media_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co07
use "D:\Bases\MTE\Vinc\nordeste2007_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2007_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne07_prop_media_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co07
use "D:\Bases\MTE\Vinc\norte2007_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2007_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no07_prop_media_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co07
use "D:\Bases\MTE\Vinc\sudeste2007_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2007_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se07_prop_media_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co07
use "D:\Bases\MTE\Vinc\sul2007_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2007_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su07_prop_media_b.dta", replace






















*************************** CENTROOESTE

// Carregar o dataset mestre co08
use "D:\Bases\MTE\Vinc\centrooeste2008_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2008_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co08_prop_media_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co08
use "D:\Bases\MTE\Vinc\nordeste2008_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2008_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne08_prop_media_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co08
use "D:\Bases\MTE\Vinc\norte2008_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2008_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no08_prop_media_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co08
use "D:\Bases\MTE\Vinc\sudeste2008_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2008_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se08_prop_media_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co08
use "D:\Bases\MTE\Vinc\sul2008_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2008_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su08_prop_media_b.dta", replace



























*************************** CENTROOESTE

// Carregar o dataset mestre co09
use "D:\Bases\MTE\Vinc\centrooeste2009_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2009_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co09_prop_media_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co09
use "D:\Bases\MTE\Vinc\nordeste2009_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2009_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne09_prop_media_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co09
use "D:\Bases\MTE\Vinc\norte2009_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2009_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no09_prop_media_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co09
use "D:\Bases\MTE\Vinc\sudeste2009_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2009_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se09_prop_media_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co09
use "D:\Bases\MTE\Vinc\sul2009_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2009_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su09_prop_media_b.dta", replace

















*************************** CENTROOESTE

// Carregar o dataset mestre co10
use "D:\Bases\MTE\Vinc\centrooeste2010_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2010_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co10_prop_media_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co10
use "D:\Bases\MTE\Vinc\nordeste2010_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2010_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne10_prop_media_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co10
use "D:\Bases\MTE\Vinc\norte2010_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2010_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no10_prop_media_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co10
use "D:\Bases\MTE\Vinc\sudeste2010_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2010_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se10_prop_media_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co10
use "D:\Bases\MTE\Vinc\sul2010_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2010_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su10_prop_media_b.dta", replace

























*************************** CENTROOESTE

// Carregar o dataset mestre co11
use "D:\Bases\MTE\Vinc\centrooeste2011_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2011_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co11_prop_media_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co11
use "D:\Bases\MTE\Vinc\nordeste2011_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2011_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne11_prop_media_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co11
use "D:\Bases\MTE\Vinc\norte2011_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2011_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no11_prop_media_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co11
use "D:\Bases\MTE\Vinc\sudeste2011_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2011_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se11_prop_media_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co11
use "D:\Bases\MTE\Vinc\sul2011_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2011_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su11_prop_media_b.dta", replace




















*************************** CENTROOESTE

// Carregar o dataset mestre co12
use "D:\Bases\MTE\Vinc\centrooeste2012_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2012_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co12_prop_media_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co12
use "D:\Bases\MTE\Vinc\nordeste2012_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2012_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne12_prop_media_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co12
use "D:\Bases\MTE\Vinc\norte2012_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2012_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no12_prop_media_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co12
use "D:\Bases\MTE\Vinc\sudeste2012_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2012_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se12_prop_media_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co12
use "D:\Bases\MTE\Vinc\sul2012_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2012_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su12_prop_media_b.dta", replace


























*************************** CENTROOESTE

// Carregar o dataset mestre co13
use "D:\Bases\MTE\Vinc\centrooeste2013_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2013_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co13_prop_media_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co13
use "D:\Bases\MTE\Vinc\nordeste2013_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2013_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne13_prop_media_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co13
use "D:\Bases\MTE\Vinc\norte2013_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2013_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no13_prop_media_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co13
use "D:\Bases\MTE\Vinc\sudeste2013_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2013_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se13_prop_media_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co13
use "D:\Bases\MTE\Vinc\sul2013_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2013_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su13_prop_media_b.dta", replace





















*************************** CENTROOESTE

// Carregar o dataset mestre co14
use "D:\Bases\MTE\Vinc\centrooeste2014_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2014_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co14_prop_media_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co14
use "D:\Bases\MTE\Vinc\nordeste2014_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2014_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne14_prop_media_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co14
use "D:\Bases\MTE\Vinc\norte2014_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2014_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no14_prop_media_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co14
use "D:\Bases\MTE\Vinc\sudeste2014_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2014_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se14_prop_media_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co14
use "D:\Bases\MTE\Vinc\sul2014_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2014_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su14_prop_media_b.dta", replace
























*************************** CENTROOESTE

// Carregar o dataset mestre co15
use "D:\Bases\MTE\Vinc\centrooeste2015_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2015_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co15_prop_media_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co15
use "D:\Bases\MTE\Vinc\nordeste2015_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2015_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne15_prop_media_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co15
use "D:\Bases\MTE\Vinc\norte2015_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2015_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no15_prop_media_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co15
use "D:\Bases\MTE\Vinc\sudeste2015_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2015_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se15_prop_media_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co15
use "D:\Bases\MTE\Vinc\sul2015_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2015_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su15_prop_media_b.dta", replace




























*************************** CENTROOESTE

// Carregar o dataset mestre co16
use "D:\Bases\MTE\Vinc\centrooeste2016_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2016_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co16_prop_media_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co16
use "D:\Bases\MTE\Vinc\nordeste2016_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2016_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne16_prop_media_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co16
use "D:\Bases\MTE\Vinc\norte2016_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2016_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no16_prop_media_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co16
use "D:\Bases\MTE\Vinc\sudeste2016_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2016_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se16_prop_media_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co16
use "D:\Bases\MTE\Vinc\sul2016_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2016_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su16_prop_media_b.dta", replace


























*************************** CENTROOESTE

// Carregar o dataset mestre co17
use "D:\Bases\MTE\Vinc\centrooeste2017_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2017_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co17_prop_media_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co17
use "D:\Bases\MTE\Vinc\nordeste2017_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2017_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne17_prop_media_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co17
use "D:\Bases\MTE\Vinc\norte2017_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2017_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no17_prop_media_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co17
use "D:\Bases\MTE\Vinc\sudeste2017_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2017_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se17_prop_media_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co17
use "D:\Bases\MTE\Vinc\sul2017_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2017_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su17_prop_media_b.dta", replace


























*************************** CENTROOESTE

// Carregar o dataset mestre co18
use "D:\Bases\MTE\Vinc\centrooeste2018_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2018_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co18_prop_media_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co18
use "D:\Bases\MTE\Vinc\nordeste2018_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2018_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne18_prop_media_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co18
use "D:\Bases\MTE\Vinc\norte2018_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2018_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no18_prop_media_b.dta", replace





************************** SUDESTE


// Carregar o dataset mestre co18
use "D:\Bases\MTE\Vinc\sudeste2018_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sudeste2018_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\se18_prop_media_b.dta", replace




*********************** SUL


// Carregar o dataset mestre co18
use "D:\Bases\MTE\Vinc\sul2018_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2018_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su18_prop_media_b.dta", replace


















*************************** CENTROOESTE

// Carregar o dataset mestre co19
use "D:\Bases\MTE\Vinc\centrooeste2019_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2019_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co19_prop_media_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co19
use "D:\Bases\MTE\Vinc\nordeste2019_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2019_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne19_prop_media_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co19
use "D:\Bases\MTE\Vinc\norte2019_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2019_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no19_prop_media_b.dta", replace





************************** mgesrj


// Carregar o dataset mestre co19
use "D:\Bases\MTE\Vinc\mgesrj2019_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\mgesrj2019_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)          	
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)






collapse (mean) proportion_matched, by(municipio)


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\mgesrj19_prop_media_b.dta", replace





************************** sp


// Carregar o dataset mestre co19
use "D:\Bases\MTE\Vinc\sp2019_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sp2019_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)          	
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)






collapse (mean) proportion_matched, by(municipio)


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sp19_prop_media_b.dta", replace






*********************** SUL


// Carregar o dataset mestre co19
use "D:\Bases\MTE\Vinc\sul2019_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2019_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su19_prop_media_b.dta", replace

















*************************** CENTROOESTE

// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\centrooeste2020_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2020_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co20_prop_media_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\nordeste2020_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2020_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne20_prop_media_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\norte2020_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2020_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no20_prop_media_b.dta", replace





************************** mgesrj


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\mgesrj2020_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\mgesrj2020_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)          	
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)






collapse (mean) proportion_matched, by(municipio)


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\mgesrj20_prop_media_b.dta", replace





************************** sp


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\sp2020_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sp2020_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)          	
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)






collapse (mean) proportion_matched, by(municipio)


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sp20_prop_media_b.dta", replace






*********************** SUL


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\sul2020_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2020_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su20_prop_media_b.dta", replace





















*************************** CENTROOESTE

// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\centrooeste2021_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\centrooeste2021_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\co21_prop_media_b.dta", replace



************************** NORDESTE


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\nordeste2021_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\nordeste2021_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\ne21_prop_media_b.dta", replace




************************** NORTE


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\norte2021_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\norte2021_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\no21_prop_media_b.dta", replace





************************** mgesrj


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\mgesrj2021_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\mgesrj2021_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)          	
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)






collapse (mean) proportion_matched, by(municipio)


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\mgesrj21_prop_media_b.dta", replace





************************** sp


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\sp2021_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique_copia.dta"

// Verificar o resultado da mesclagem
tab _merge

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sp2021_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)          	
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)






collapse (mean) proportion_matched, by(municipio)


save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sp21_prop_media_b.dta", replace






*********************** SUL


// Carregar o dataset mestre co20
use "D:\Bases\MTE\Vinc\sul2021_limpo.dta", clear 
destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Realizar o merge m:1 com o dataset media (sem duplicatas)
merge m:1 ocup2002 using "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\media_unique_copia.dta"

// Verificar o resultado da mesclagem
drop ocupp2002;  destring naturjur, replace
keep if empem3112 == "1" & naturjur>2020

// Criar uma variável indicando se houve correspondência
gen matched = (_merge == 3)

// Salvar o dataset com a variável de correspondência
save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\sul2021_com_matched_media.dta", replace


// Calcular a proporção de correspondências para cada município
bysort municipio: egen total_ocup = count(ocup2002)
bysort municipio: egen matched_ocup = total(matched)
gen proportion_matched = matched_ocup / total_ocup
// Gerar a tabela de proporções por município
*table municipio, c(mean proportion_matched) format(%5.2f)





collapse (mean) proportion_matched, by(municipio)



save "D:\Pessoal\Luis_Souza\Agropecuaria\rais skills\ranking\su21_prop_media_b.dta", replace




